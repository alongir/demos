{
 "23": "    @json_dataset('data/dataset_23.json')\n    @clear_session({'spanId': 23})\n    def test_23_post_(self, data_row):\n        H, PRODUCT_CODE, U, s = data_row\n\n        # GET https://apply.usbank.com/apply/apply.html (endp 36)\n        apply_usbank_com = get_http_client('https://apply.usbank.com', authenticate)\n        qstr = '?' + urlencode([('PRODUCT_CODE', PRODUCT_CODE), ('SUB_PRODUCT_CODE', 'PI')])\n        resp = apply_usbank_com.get('/apply/apply.html' + qstr)\n        resp.assert_status_code(302)\n        u = get_data_from_header('location', resp)\n\n        # POST https://usbank-app.quantummetric.com/ (endp 23)\n        usbank_app_quantummetric_com = get_http_client('https://usbank-app.quantummetric.com', authenticate)\n        qstr = '?' + urlencode([('H', H), ('N', str(random.randint(0, 1434))), ('P', str(random.randint(0, 15))), ('Q', '2'), ('S', str(random.randint(0, 102475))), ('T', 'B'), ('U', U), ('s', s), ('t', str(int(time.time() * 1000))), ('u', u), ('v', str(int(time.time() * 1000))), ('z', '1')])\n        with open('data/payload_for_endp_23.txt', 'r') as payload_file:\n            payload = payload_file.read()\n        resp = usbank_app_quantummetric_com.post('/' + qstr, data=payload, headers=dict([('content-type', 'text/plain')]))\n        resp.assert_status_code(200)\n\n",
 "24": "    @json_dataset('data/dataset_24.json')\n    @clear_session({'spanId': 24})\n    def test_24_get_(self, data_row):\n        H, Module, Q, Q_CLIENTVERSION, Q_CLIENTVERSION1, Q_InterceptID, Q_ORIGIN, s = data_row\n\n        # GET https://www.usbank.com/index.html (endp 4)\n        www_usbank_com = get_http_client('https://www.usbank.com', authenticate)\n        resp = www_usbank_com.get('/index.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('html head title', expected_value='Consumer banking | Personal banking | U.S. Bank')\n        Q_LOC = cssselect('html head link[href] @href', resp)\n\n        # GET https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php (endp 21)\n        siteintercept_qualtrics_com = get_http_client('https://siteintercept.qualtrics.com', authenticate)\n        qstr = '?' + urlencode([('Module', Module), ('Q_CLIENTTYPE', 'web'), ('Q_CLIENTVERSION', Q_CLIENTVERSION), ('Q_InterceptID', Q_InterceptID), ('Q_ORIGIN', Q_ORIGIN), ('Version', str(random.randint(1, 26)))])\n        resp = siteintercept_qualtrics_com.get('/WRSiteInterceptEngine/Asset.php' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.CreativeDefinition.Options.Message.Headline.Text', expected_value='Will you take our survey?')\n        Q_ZoneID = jsonpath('$.CreativeDefinition.ZoneID', resp)\n\n        # POST https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Targeting.php (endp 22)\n        qstr = '?' + urlencode([('Q_CLIENTTYPE', 'web'), ('Q_CLIENTVERSION', Q_CLIENTVERSION1), ('Q_ZoneID', Q_ZoneID)])\n        resp = siteintercept_qualtrics_com.post('/WRSiteInterceptEngine/Targeting.php' + qstr, data=[('Q_LOC', Q_LOC)])\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.ClientSideIntercepts[*].LogicTree.Left.Left.Type', expected_value='LogicNode')\n\n        # GET https://usbank-app.quantummetric.com/ (endp 24)\n        usbank_app_quantummetric_com = get_http_client('https://usbank-app.quantummetric.com', authenticate)\n        qstr = '?' + urlencode([('H', H), ('Q', Q), ('s', s)])\n        resp = usbank_app_quantummetric_com.get('/' + qstr)\n        resp.assert_status_code(200)\n\n",
 "25": "    @json_dataset('data/dataset_25.json')\n    @clear_session({'spanId': 25})\n    def test_25_post_(self, data_row):\n        Module, Q_CLIENTVERSION, Q_CLIENTVERSION1, Q_InterceptID, Q_ORIGIN, X, s = data_row\n\n        # GET https://www.usbank.com/index.html (endp 4)\n        www_usbank_com = get_http_client('https://www.usbank.com', authenticate)\n        resp = www_usbank_com.get('/index.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('html head title', expected_value='Consumer banking | Personal banking | U.S. Bank')\n        Q_LOC = cssselect('html head link[href] @href', resp)\n        u = cssselect('html head link[href] @href', resp)\n\n        # GET https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php (endp 21)\n        siteintercept_qualtrics_com = get_http_client('https://siteintercept.qualtrics.com', authenticate)\n        qstr = '?' + urlencode([('Module', Module), ('Q_CLIENTTYPE', 'web'), ('Q_CLIENTVERSION', Q_CLIENTVERSION), ('Q_InterceptID', Q_InterceptID), ('Q_ORIGIN', Q_ORIGIN), ('Version', str(random.randint(1, 26)))])\n        resp = siteintercept_qualtrics_com.get('/WRSiteInterceptEngine/Asset.php' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.CreativeDefinition.Options.Message.Headline.Text', expected_value='Will you take our survey?')\n        Q_ZoneID = jsonpath('$.CreativeDefinition.ZoneID', resp)\n\n        # POST https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Targeting.php (endp 22)\n        qstr = '?' + urlencode([('Q_CLIENTTYPE', 'web'), ('Q_CLIENTVERSION', Q_CLIENTVERSION1), ('Q_ZoneID', Q_ZoneID)])\n        resp = siteintercept_qualtrics_com.post('/WRSiteInterceptEngine/Targeting.php' + qstr, data=[('Q_LOC', Q_LOC)])\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.ClientSideIntercepts[*].LogicTree.Left.Left.Type', expected_value='LogicNode')\n\n        # POST https://usbank-sync.quantummetric.com/ (endp 25)\n        usbank_sync_quantummetric_com = get_http_client('https://usbank-sync.quantummetric.com', authenticate)\n        qstr = '?' + urlencode([('Q', '1'), ('T', 'B'), ('X', X), ('Y', '1'), ('s', s), ('t', str(int(time.time() * 1000))), ('u', u), ('v', str(int(time.time() * 1000))), ('z', '1')])\n        with open('data/payload_for_endp_25.txt', 'r') as payload_file:\n            payload = payload_file.read()\n        resp = usbank_sync_quantummetric_com.post('/' + qstr, data=payload, headers=dict([('content-type', 'text/plain')]))\n        resp.assert_status_code(200)\n\n",
 "43": "    @json_dataset('data/dataset_43.json')\n    @clear_session({'spanId': 43})\n    def test_43_get_param(self, data_row):\n        param, = data_row\n\n        # GET https://locations.usbank.com/{param} (endp 43)\n        locations_usbank_com = get_http_client('https://locations.usbank.com', authenticate)\n        resp = locations_usbank_com.get(f'/{param}')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('html head title', expected_value='Location Search')\n\n",
 "37": "    @json_dataset('data/dataset_37.json')\n    @clear_session({'spanId': 37})\n    def test_37_post_param_v1_applications(self, data_row):\n        param, productCode = data_row\n\n        # POST https://onboarding.usbank.com/{param}/v1/applications (endp 37)\n        onboarding_usbank_com = get_http_client('https://onboarding.usbank.com', authenticate)\n        with open('data/payload_for_endp_37.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.products[*].productCode', productCode)\n        resp = onboarding_usbank_com.post(f'/{param}/v1/applications', json=json_payload, headers=dict([('x-requested-with', 'X-Requested-With')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.applicants[*].addresses.primary.country', expected_value='US')\n\n",
 "38": "    @json_dataset('data/dataset_38.json')\n    @clear_session({'spanId': 38})\n    def test_38_post_param_v1_applications_applicationId_patch(self, data_row):\n        countriesOfCitizenship, email_, lastName, monthlyHousingPayment, number, op, param, path, productCode = data_row\n\n        # POST https://onboarding.usbank.com/{param}/v1/applications (endp 37)\n        onboarding_usbank_com = get_http_client('https://onboarding.usbank.com', authenticate)\n        with open('data/payload_for_endp_37.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.products[*].productCode', productCode)\n        resp = onboarding_usbank_com.post(f'/{param}/v1/applications', json=json_payload, headers=dict([('x-requested-with', 'X-Requested-With')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.applicants[*].addresses.primary.country', expected_value='US')\n        applicationId = jsonpath('$.applicationId', resp)\n        securitytoken = get_data_from_header('securitytoken', resp)\n\n        # POST https://onboarding.usbank.com/{param}/v1/applications/{applicationId}/patch (endp 38)\n        with open('data/payload_for_endp_38.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$[*].op', op)\n        apply_into_json(json_payload, '$[*].path', path)\n        apply_into_json(json_payload, '$[*].value.countriesOfCitizenship[*]', countriesOfCitizenship)\n        apply_into_json(json_payload, '$[*].value.lastName', lastName)\n        apply_into_json(json_payload, '$[*].value.monthlyHousingPayment', monthlyHousingPayment)\n        apply_into_json(json_payload, '$[*].value.number', number)\n        apply_into_json(json_payload, '$[*].value.personal.email', email_)\n        resp = onboarding_usbank_com.post(f'/{param}/v1/applications/{applicationId}/patch', json=json_payload, headers=dict([('securitytoken', securitytoken), ('x-requested-with', 'X-Requested-With')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.applicants[*].addresses.primary.country', expected_value='US')\n\n",
 "45": "    @json_dataset('data/dataset_45.json')\n    @clear_session({'spanId': 45})\n    def test_45_post_param1_xwNT_param2_mpdLQ_param3_param4_IFsXW_param5(self, data_row):\n        param, param1, param2, param3, param4, sensor_data = data_row\n\n        # POST https://onlinebanking.usbank.com/{param1}/xwNT/{param2}/mpdLQ/{param3}/{param4}/IFsXW/{param5} (endp 45)\n        onlinebanking_usbank_com = get_http_client('https://onlinebanking.usbank.com', authenticate)\n        with open('data/payload_for_endp_45.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.sensor_data', sensor_data)\n        resp = onlinebanking_usbank_com.post(f'/{param}/xwNT/{param1}/mpdLQ/{param2}/{param3}/IFsXW/{param4}', json=json_payload)\n        resp.assert_status_code(201)\n\n",
 "46": "    # authentication-related test\n    @clear_session({'spanId': 46})\n    def test_46_get_OLS_LoginAssist_RetriveId(self):\n        # GET https://onlinebanking.usbank.com/OLS/LoginAssist/RetriveId (endp 46)\n        onlinebanking_usbank_com = get_http_client('https://onlinebanking.usbank.com', dummy_auth)\n        resp = onlinebanking_usbank_com.get('/OLS/LoginAssist/RetriveId')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div.mainBodyWidth div.body-content.bodyDiv div div.la__touchnav-container a', expected_value='Help')\n        resp.assert_cssselect('html head title', expected_value='Login Assistance')\n\n",
 "47": "    @clear_session({'spanId': 47})\n    def test_47_get_OLS_Public_Enrollment_Index(self):\n        # GET https://onlinebanking.usbank.com/OLS/Public/Enrollment/Index (endp 47)\n        onlinebanking_usbank_com = get_http_client('https://onlinebanking.usbank.com', authenticate)\n        qstr = '?' + urlencode([('isPartnerOLB', 'true')])\n        resp = onlinebanking_usbank_com.get('/OLS/Public/Enrollment/Index' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('html head title', expected_value='Enrollment')\n\n",
 "20": "    @json_dataset('data/dataset_20.json')\n    @clear_session({'spanId': 20})\n    def test_20_post_WRSiteInterceptEngine_(self, data_row):\n        BrandDC, Module, Q_CLIENTVERSION, Q_CLIENTVERSION1, Q_CLIENTVERSION2, Q_InterceptID, Q_ORIGIN = data_row\n\n        # GET https://www.usbank.com/index.html (endp 4)\n        www_usbank_com = get_http_client('https://www.usbank.com', authenticate)\n        resp = www_usbank_com.get('/index.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('html head title', expected_value='Consumer banking | Personal banking | U.S. Bank')\n        Q_LOC = cssselect('html head link[href] @href', resp)\n\n        # GET https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php (endp 21)\n        siteintercept_qualtrics_com = get_http_client('https://siteintercept.qualtrics.com', authenticate)\n        qstr = '?' + urlencode([('Module', Module), ('Q_CLIENTTYPE', 'web'), ('Q_CLIENTVERSION', Q_CLIENTVERSION), ('Q_InterceptID', Q_InterceptID), ('Q_ORIGIN', Q_ORIGIN), ('Version', str(random.randint(1, 26)))])\n        resp = siteintercept_qualtrics_com.get('/WRSiteInterceptEngine/Asset.php' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.CreativeDefinition.Options.Message.Headline.Text', expected_value='Will you take our survey?')\n        Q_ZoneID = jsonpath('$.CreativeDefinition.ZoneID', resp)\n\n        # POST https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Targeting.php (endp 22)\n        qstr = '?' + urlencode([('Q_CLIENTTYPE', 'web'), ('Q_CLIENTVERSION', Q_CLIENTVERSION1), ('Q_ZoneID', Q_ZoneID)])\n        resp = siteintercept_qualtrics_com.post('/WRSiteInterceptEngine/Targeting.php' + qstr, data=[('Q_LOC', Q_LOC)])\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.ClientSideIntercepts[*].LogicTree.Left.Left.Type', expected_value='LogicNode')\n        Q_ASID = jsonpath('$.ClientSideIntercepts[*].ActionSets[*].ActionSetID', resp)\n        Q_CID = url_part('?Q_CID', jsonpath('$.ClientSideIntercepts[*].ActionSets[*].Target.*', resp))\n        Q_SIID = url_part('?Q_SIID', jsonpath('$.ClientSideIntercepts[*].ActionSets[*].Target.*', resp))\n        SurveyID = url_part('/3', jsonpath('$.ClientSideIntercepts[*].ActionSets[*].Target.OriginalURL', resp))\n\n        # POST https://siteintercept.qualtrics.com/WRSiteInterceptEngine/ (endp 20)\n        qstr = '?' + urlencode([('Q_ASID', Q_ASID), ('Q_CID', Q_CID), ('Q_CLIENTTYPE', 'web'), ('Q_CLIENTVERSION', Q_CLIENTVERSION2), ('Q_Impress', '1'), ('Q_SIID', Q_SIID), ('r', str(int(time.time() * 1000)))])\n        resp = siteintercept_qualtrics_com.post('/WRSiteInterceptEngine/' + qstr, data=[('BrandDC', BrandDC), ('BrandID', 'usbank'), ('SurveyID', SurveyID)])\n        resp.assert_status_code(200)\n\n",
 "21": "    @json_dataset('data/dataset_21.json')\n    @clear_session({'spanId': 21})\n    def test_21_get_WRSiteInterceptEngine_Asset_php(self, data_row):\n        Module, Q_CLIENTVERSION, Q_InterceptID, Q_ORIGIN = data_row\n\n        # GET https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php (endp 21)\n        siteintercept_qualtrics_com = get_http_client('https://siteintercept.qualtrics.com', authenticate)\n        qstr = '?' + urlencode([('Module', Module), ('Q_CLIENTTYPE', 'web'), ('Q_CLIENTVERSION', Q_CLIENTVERSION), ('Q_InterceptID', Q_InterceptID), ('Q_ORIGIN', Q_ORIGIN), ('Version', str(random.randint(1, 26)))])\n        resp = siteintercept_qualtrics_com.get('/WRSiteInterceptEngine/Asset.php' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.CreativeDefinition.Options.Message.Headline.Text', expected_value='Will you take our survey?')\n\n",
 "22": "    @json_dataset('data/dataset_22.json')\n    @clear_session({'spanId': 22})\n    def test_22_post_WRSiteInterceptEngine_Targeting_php(self, data_row):\n        Module, Q_CLIENTVERSION, Q_CLIENTVERSION1, Q_InterceptID, Q_ORIGIN = data_row\n\n        # GET https://www.usbank.com/index.html (endp 4)\n        www_usbank_com = get_http_client('https://www.usbank.com', authenticate)\n        resp = www_usbank_com.get('/index.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('html head title', expected_value='Consumer banking | Personal banking | U.S. Bank')\n        Q_LOC = cssselect('html head link[href] @href', resp)\n\n        # GET https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Asset.php (endp 21)\n        siteintercept_qualtrics_com = get_http_client('https://siteintercept.qualtrics.com', authenticate)\n        qstr = '?' + urlencode([('Module', Module), ('Q_CLIENTTYPE', 'web'), ('Q_CLIENTVERSION', Q_CLIENTVERSION), ('Q_InterceptID', Q_InterceptID), ('Q_ORIGIN', Q_ORIGIN), ('Version', str(random.randint(1, 26)))])\n        resp = siteintercept_qualtrics_com.get('/WRSiteInterceptEngine/Asset.php' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.CreativeDefinition.Options.Message.Headline.Text', expected_value='Will you take our survey?')\n        Q_ZoneID = jsonpath('$.CreativeDefinition.ZoneID', resp)\n\n        # POST https://siteintercept.qualtrics.com/WRSiteInterceptEngine/Targeting.php (endp 22)\n        qstr = '?' + urlencode([('Q_CLIENTTYPE', 'web'), ('Q_CLIENTVERSION', Q_CLIENTVERSION1), ('Q_ZoneID', Q_ZoneID)])\n        resp = siteintercept_qualtrics_com.post('/WRSiteInterceptEngine/Targeting.php' + qstr, data=[('Q_LOC', Q_LOC)])\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.ClientSideIntercepts[*].LogicTree.Left.Left.Type', expected_value='LogicNode')\n\n",
 "1": "    @clear_session({'spanId': 1})\n    def test_01_get_about_us_bank_customer_service_html(self):\n        # GET https://www.usbank.com/about-us-bank/customer-service.html (endp 1)\n        www_usbank_com = get_http_client('https://www.usbank.com', authenticate)\n        resp = www_usbank_com.get('/about-us-bank/customer-service.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('html head title', expected_value='Customer service | U.S. Bank')\n\n",
 "36": "    @json_dataset('data/dataset_36.json')\n    @clear_session({'spanId': 36})\n    def test_36_get_apply_apply_html(self, data_row):\n        PRODUCT_CODE, = data_row\n\n        # GET https://apply.usbank.com/apply/apply.html (endp 36)\n        apply_usbank_com = get_http_client('https://apply.usbank.com', authenticate)\n        qstr = '?' + urlencode([('PRODUCT_CODE', PRODUCT_CODE), ('SUB_PRODUCT_CODE', 'PI')])\n        resp = apply_usbank_com.get('/apply/apply.html' + qstr)\n        resp.assert_status_code(302)\n\n",
 "2": "    @clear_session({'spanId': 2})\n    def test_02_get_bank_accounts_checking_accounts_html(self):\n        # GET https://www.usbank.com/bank-accounts/checking-accounts.html (endp 2)\n        www_usbank_com = get_http_client('https://www.usbank.com', authenticate)\n        resp = www_usbank_com.get('/bank-accounts/checking-accounts.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('dialog.dialog.shield-zipcodes[name=\"#saveXZip\"] div.content div.heading.large h1', expected_value='Zip Code')\n        resp.assert_cssselect('html head title', expected_value='Checking accounts | Open a Personal Checking Account | U.S. Bank')\n\n",
 "3": "    @clear_session({'spanId': 3})\n    def test_03_get_bank_accounts_checking_accounts_gold_checking_account_html(self):\n        # GET https://www.usbank.com/bank-accounts/checking-accounts/gold-checking-account.html (endp 3)\n        www_usbank_com = get_http_client('https://www.usbank.com', authenticate)\n        resp = www_usbank_com.get('/bank-accounts/checking-accounts/gold-checking-account.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('section.pubIns.productDetailsPage div div.bodyContent.container-fluid div.row div.bannerResponsiveGrid div div.aem-Grid div.banner.parbase.aem-GridColumn div.USBDesignSystem--Shield.USBHero div div.USBHero__Container.clearfix div.clearfix div.text div div.textContainer h1', expected_value='U.S. BANK GOLD CHECKING PACKAGE')\n        resp.assert_cssselect('html head title', expected_value='Gold Checking account | Personal Checking account | U.S. Bank')\n\n",
 "39": "    @json_dataset('data/dataset_39.json')\n    @clear_session({'spanId': 39})\n    def test_39_get_deposits_depositId_PI_start(self, data_row):\n        depositId, = data_row\n\n        # GET https://onboarding.usbank.com/deposits/{depositId}/PI/start (endp 39)\n        onboarding_usbank_com = get_http_client('https://onboarding.usbank.com', authenticate)\n        resp = onboarding_usbank_com.get(f'/deposits/{depositId}/PI/start')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('html head title', expected_value='U.S. Bank Checking')\n\n",
 "4": "    @clear_session({'spanId': 4})\n    def test_04_get_index_html(self):\n        # GET https://www.usbank.com/index.html (endp 4)\n        www_usbank_com = get_http_client('https://www.usbank.com', authenticate)\n        resp = www_usbank_com.get('/index.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('html head title', expected_value='Consumer banking | Personal banking | U.S. Bank')\n\n",
 "33": "    @json_dataset('data/dataset_33.json')\n    @clear_session({'spanId': 33})\n    def test_33_get_pixel_conv_param(self, data_row):\n        param, = data_row\n\n        # GET https://bm.adentifi.com/pixel/conv/{param} (endp 33)\n        bm_adentifi_com = get_http_client('https://bm.adentifi.com', authenticate)\n        resp = bm_adentifi_com.get(f'/pixel/conv/{param}')\n        resp.assert_status_code(302)\n\n",
 "5": "    @json_dataset('data/dataset_5.json')\n    @clear_session({'spanId': 5})\n    def test_05_post_plpXRb_YlO_param1_param2_param3_param4_aEs_aeId(self, data_row):\n        aeId, param, param1, param2, param3, sensor_data = data_row\n\n        # POST https://www.usbank.com/plpXRb/YlO/{param1}/{param2}/{param3}/{param4}/aEs/{aeId} (endp 5)\n        www_usbank_com = get_http_client('https://www.usbank.com', authenticate)\n        with open('data/payload_for_endp_5.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.sensor_data', sensor_data)\n        resp = www_usbank_com.post(f'/plpXRb/YlO/{param}/{param1}/{param2}/{param3}/aEs/{aeId}', json=json_payload)\n        resp.assert_status_code(201)\n\n",
 "41": "    @json_dataset('data/dataset_41.json')\n    @clear_session({'spanId': 41})\n    def test_41_get_product_configuration_v1_products_usbank_param_PI(self, data_row):\n        param, = data_row\n\n        # GET https://sales.usbank.com/product-configuration/v1/products/usbank/{param}/PI (endp 41)\n        sales_usbank_com = get_http_client('https://sales.usbank.com', authenticate)\n        resp = sales_usbank_com.get(f'/product-configuration/v1/products/usbank/{param}/PI', headers=dict([('x-requested-with', 'X-Requested-With')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.tenant', expected_value='usbank')\n\n",
 "40": "    @json_dataset('data/dataset_40.json')\n    @clear_session({'spanId': 40})\n    def test_40_post_proxies_v1_validateAddress(self, data_row):\n        param, productCode, usAddress, zipCode = data_row\n\n        # POST https://onboarding.usbank.com/{param}/v1/applications (endp 37)\n        onboarding_usbank_com = get_http_client('https://onboarding.usbank.com', authenticate)\n        with open('data/payload_for_endp_37.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.products[*].productCode', productCode)\n        resp = onboarding_usbank_com.post(f'/{param}/v1/applications', json=json_payload, headers=dict([('x-requested-with', 'X-Requested-With')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.applicants[*].addresses.primary.country', expected_value='US')\n        securitytoken = get_data_from_header('securitytoken', resp)\n\n        # POST https://onboarding.usbank.com/proxies/v1/validateAddress (endp 40)\n        with open('data/payload_for_endp_40.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.customerAddress.usAddress.*', usAddress)\n        apply_into_json(json_payload, '$.customerAddress.usAddress.zipCode', zipCode)\n        resp = onboarding_usbank_com.post('/proxies/v1/validateAddress', json=json_payload, headers=dict([('securitytoken', securitytoken), ('x-requested-with', 'X-Requested-With')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.address.city', expected_value='NEWARK')\n\n",
 "42": "    @clear_session({'spanId': 42})\n    def test_42_get_search_html(self):\n        # GET https://locations.usbank.com/search.html (endp 42)\n        locations_usbank_com = get_http_client('https://locations.usbank.com', authenticate)\n        resp = locations_usbank_com.get('/search.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('html head title', expected_value='Location Search')\n\n",
 "44": "    @json_dataset('data/dataset_44.json')\n    @clear_session({'spanId': 44})\n    def test_44_get_search_param(self, data_row):\n        param, = data_row\n\n        # GET https://locations.usbank.com/search/{param} (endp 44)\n        locations_usbank_com = get_http_client('https://locations.usbank.com', authenticate)\n        resp = locations_usbank_com.get(f'/search/{param}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#searchRest div.searchResultsLocations div.cq-dd-pages h1.hidden-sm.hidden-xs', expected_value='Search Results')\n\n",
 "6": "    @json_dataset('data/dataset_6.json')\n    @clear_session({'spanId': 6})\n    def test_06_post_svt_usbank_shield_fetchDisclosureContent(self, data_row):\n        businessLines, disclosureTitles = data_row\n\n        # POST https://www.usbank.com/svt/usbank/shield/fetchDisclosureContent (endp 6)\n        www_usbank_com = get_http_client('https://www.usbank.com', authenticate)\n        resp = www_usbank_com.post('/svt/usbank/shield/fetchDisclosureContent', data=[('businessLines', businessLines), ('disclosureTitles', disclosureTitles)], headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$[*].status', expected_value='success')\n\n"
}