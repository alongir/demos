# This is a Mockintosh configuration file.
# Mockintosh provides a microservices friendly, small footprint HTTP mock service.
# A standard laptop can run dozens of Mockintosh instances, or you can run all instances in a single Docker container.
#
# Install Mockintosh:                 pip3 install mockintosh
# Run locally:                        mockintosh <this-file>
# Run with Docker:                    docker run -it -p 8000-8005:8000-8005 -v `pwd`:/tmp testrio/mockintosh /tmp/<this-file>
# More information can be found here: https://github.com/up9inc/mockintosh

---
management:
  port: 8000
services:
- name: http://api
  port: 8001
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___api-spec.json'
  endpoints:
  - path: /
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_7.json'
      useTemplating: false
- name: http://cache
  port: 8002
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___cache-spec.json'
  endpoints:
  - path: /
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_5.json'
      useTemplating: false
- name: http://currency
  port: 8003
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___currency-spec.json'
  endpoints:
  - path: /
    response:
      headers:
        Content-Type: application/json
      body: "{\n  \"name\": \"currency\",\n  \"uri\": \"/\",\n  \"type\": \"HTTP\",\n  \"start_time\": \"2021-02-17T17:28:14.839054\",\n  \"end_time\": \"2021-02-17T17:28:14.839362\",\n  \"duration\": \"308.2\xB5s\",\n  \"body\": \"Currency response\",\n  \"code\": 200\n}"
      useTemplating: false
- name: http://payments
  port: 8004
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___payments-spec.json'
  endpoints:
  - path: /
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_6.json'
      useTemplating: false
- name: http://web
  port: 8005
  ssl: false
  managementRoot: __admin
  oas: '@mock-data/up9-http___web-spec.json'
  endpoints:
  - path: /
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_2.json'
      useTemplating: false
  - path: /ui/
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_3.html'
      useTemplating: false
  - path: /ui/manifest.json
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_4.json'
      useTemplating: false
