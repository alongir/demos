{
 "15": "    @clear_session({'spanId': 15})\n    def test_15_get_(self):\n        # GET http://edge-router/ (endp 15)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        resp = edge_router.get('/')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "16": "    @clear_session({'spanId': 16})\n    def test_16_get_basket_html(self):\n        # GET http://edge-router/basket.html (endp 16)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        resp = edge_router.get('/basket.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#basket div.box form h1', expected_value='Shopping cart')\n\n",
 "23": "    @clear_session({'spanId': 23})\n    def test_23_get_cart(self):\n        # GET http://edge-router/cart (endp 23)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        resp = edge_router.get('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "24": "    @clear_session({'spanId': 24})\n    def test_24_get_catalogue_id(self):\n        # GET http://edge-router/catalogue (endp 17)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        qstr = '?' + urlencode([('size', size), ('sort', 'id'), ('tags', 'brown')])\n        resp = edge_router.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$.[*].id', resp)\n\n        # GET http://edge-router/catalogue/{id} (endp 24)\n        resp = edge_router.get(f'/catalogue/{id_}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.imageUrl.[*]', expected_value='/catalogue/images/colourful_socks.jpg')\n\n",
 "18": "    @clear_session({'spanId': 18})\n    def test_18_get_category_html(self):\n        # GET http://edge-router/category.html (endp 18)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        resp = edge_router.get('/category.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.panel.panel-default.sidebar-menu div.panel-heading h3.panel-title', expected_value='Filters ')\n\n",
 "19": "    @clear_session({'spanId': 19})\n    def test_19_get_detail_html(self):\n        # GET http://edge-router/catalogue (endp 17)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        qstr = '?' + urlencode([('size', size), ('sort', 'id'), ('tags', 'brown')])\n        resp = edge_router.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$.[*].id', resp)\n\n        # GET http://edge-router/detail.html (endp 19)\n        qstr = '?' + urlencode([('id', id_)])\n        resp = edge_router.get('/detail.html' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.row.same-height-row div div.box.same-height h3', expected_value='You may also like these products')\n\n",
 "26": "    @clear_session({'spanId': 26})\n    def test_26_get_index_html(self):\n        # GET http://edge-router/index.html (endp 26)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        resp = edge_router.get('/index.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "20": "    # authentication-related test\n    @clear_session({'spanId': 20})\n    def test_20_get_login(self):\n        # GET http://edge-router/login (endp 20)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', dummy_auth)\n        resp = edge_router.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('p', expected_value='Cookie is set')\n\n",
 "9": "    @clear_session({'spanId': 9})\n    def test_09_get_(self):\n        # GET http://front-end/ (endp 9)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "10": "    @clear_session({'spanId': 10})\n    def test_10_get_basket_html(self):\n        # GET http://front-end/basket.html (endp 10)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/basket.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#basket div.box form h1', expected_value='Shopping cart')\n\n",
 "21": "    @clear_session({'spanId': 21})\n    def test_21_get_cart(self):\n        # GET http://front-end/cart (endp 21)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "22": "    @clear_session({'spanId': 22})\n    def test_22_get_catalogue_id(self):\n        # GET http://front-end/catalogue (endp 11)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        qstr = '?' + urlencode([('size', size), ('sort', 'id'), ('tags', 'brown')])\n        resp = front_end.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$.[*].id', resp)\n\n        # GET http://front-end/catalogue/{id} (endp 22)\n        resp = front_end.get(f'/catalogue/{id_}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.imageUrl.[*]', expected_value='/catalogue/images/colourful_socks.jpg')\n\n",
 "12": "    @clear_session({'spanId': 12})\n    def test_12_get_category_html(self):\n        # GET http://front-end/category.html (endp 12)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/category.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.panel.panel-default.sidebar-menu div.panel-heading h3.panel-title', expected_value='Filters ')\n\n",
 "13": "    @clear_session({'spanId': 13})\n    def test_13_get_detail_html(self):\n        # GET http://front-end/catalogue (endp 11)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        qstr = '?' + urlencode([('size', size), ('sort', 'id'), ('tags', 'brown')])\n        resp = front_end.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$.[*].id', resp)\n\n        # GET http://front-end/detail.html (endp 13)\n        qstr = '?' + urlencode([('id', id_)])\n        resp = front_end.get('/detail.html' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.row.same-height-row div div.box.same-height h3', expected_value='You may also like these products')\n\n",
 "14": "    # authentication-related test\n    @clear_session({'spanId': 14})\n    def test_14_get_login(self):\n        # GET http://front-end/login (endp 14)\n        front_end = get_http_target('TARGET_FRONT_END', dummy_auth)\n        resp = front_end.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('p', expected_value='Cookie is set')\n\n",
 "7": "    @clear_session({'spanId': 7})\n    def test_07_get_carts_id_items(self):\n        # GET http://carts/carts/{id}/items (endp 7)\n        carts = get_http_target('TARGET_CARTS', authenticate)\n        resp = carts.get(f'/carts/{id_}/items')\n        resp.assert_status_code(200)\n\n",
 "8": "    @clear_session({'spanId': 8})\n    def test_08_post_carts_id_items(self):\n        # GET http://catalogue/catalogue (endp 5)\n        catalogue = get_http_target('TARGET_CATALOGUE', authenticate)\n        qstr = '?' + urlencode([('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = catalogue.get('/catalogue' + qstr)\n        resp.assert_status_code(200)\n        itemId = jsonpath('$.[*].id', resp)\n        unitPrice = jsonpath('$.[*].price', resp)\n\n        # POST http://carts/carts/{id}/items (endp 8)\n        carts = get_http_target('TARGET_CARTS', authenticate)\n        with open('data/payload_for_endp_8.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.itemId', itemId)\n        apply_into_json(json_payload, '$.unitPrice', unitPrice)\n        resp = carts.post(f'/carts/{id_}/items', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n\n",
 "27": "    @clear_session({'spanId': 27})\n    def test_27_get_carts_id_merge(self):\n        # GET http://carts/carts/{id}/merge (endp 27)\n        carts = get_http_target('TARGET_CARTS', authenticate)\n        qstr = '?' + urlencode([('sessionId', sessionId)])\n        resp = carts.get(f'/carts/{id_}/merge' + qstr)\n        resp.assert_status_code(202)\n\n",
 "6": "    @clear_session({'spanId': 6})\n    def test_06_get_catalogue_id(self):\n        # GET http://catalogue/catalogue (endp 5)\n        catalogue = get_http_target('TARGET_CATALOGUE', authenticate)\n        qstr = '?' + urlencode([('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = catalogue.get('/catalogue' + qstr)\n        resp.assert_status_code(200)\n        id_ = jsonpath('$.[*].id', resp)\n\n        # GET http://catalogue/catalogue/{id} (endp 6)\n        resp = catalogue.get(f'/catalogue/{id_}')\n        resp.assert_status_code(200)\n\n",
 "1": "    @clear_session({'spanId': 1})\n    def test_01_get_customers_id(self):\n        # GET http://user/customers/{id} (endp 1)\n        user = get_http_target('TARGET_USER', authenticate)\n        resp = user.get(f'/customers/{id_}')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.lastName', expected_value='Name')\n\n",
 "2": "    @clear_session({'spanId': 2})\n    def test_02_get_customers_id_addresses(self):\n        # GET http://user/customers/{id}/addresses (endp 2)\n        user = get_http_target('TARGET_USER', authenticate)\n        resp = user.get(f'/customers/{id_}/addresses')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$._embedded.address.[*].city', expected_value='Glasgow')\n\n",
 "3": "    @clear_session({'spanId': 3})\n    def test_03_get_customers_id_cards(self):\n        # GET http://user/customers/{id}/cards (endp 3)\n        user = get_http_target('TARGET_USER', authenticate)\n        resp = user.get(f'/customers/{id_}/cards')\n        resp.assert_status_code(200)\n\n",
 "4": "    # authentication-related test\n    @clear_session({'spanId': 4})\n    def test_04_get_login(self):\n        # GET http://user/login (endp 4)\n        user = get_http_target('TARGET_USER', dummy_auth)\n        resp = user.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n\n"
}