{
 "1": "    @clear_session({'spanId': 1})\n    def test_01_get_(self):\n        # GET http://front-end.sock-shop/ (endp 1)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "2": "    @clear_session({'spanId': 2})\n    def test_02_get_address(self):\n        # GET http://front-end.sock-shop/address (endp 2)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/address', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.city', expected_value='Glasgow')\n\n",
 "19": "    @json_dataset('data/dataset_19.json')\n    @clear_session({'spanId': 19})\n    def test_19_get_addresses_addresseId(self, data_row):\n        addresseId, cardId = data_row\n\n        # GET http://user.sock-shop/login (endp 31)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/items (endp 18)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n        # GET http://user.sock-shop/customers/{customerId} (endp 21)\n        resp = user_sock_shop.get(f'/customers/{customerId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.lastName', expected_value='Name')\n\n        # GET http://user.sock-shop/cards/{cardId} (endp 20)\n        resp = user_sock_shop.get(f'/cards/{cardId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n\n        # GET http://user.sock-shop/addresses/{addresseId} (endp 19)\n        resp = user_sock_shop.get(f'/addresses/{addresseId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.city', expected_value='Glasgow')\n\n",
 "3": "    @clear_session({'spanId': 3})\n    def test_03_get_basket_html(self):\n        # GET http://front-end.sock-shop/basket.html (endp 3)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/basket.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#basket div.box form h1', expected_value='Shopping cart')\n\n",
 "4": "    @clear_session({'spanId': 4})\n    def test_04_get_card(self):\n        # GET http://front-end.sock-shop/card (endp 4)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/card', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "20": "    @json_dataset('data/dataset_20.json')\n    @clear_session({'spanId': 20})\n    def test_20_get_cards_cardId(self, data_row):\n        cardId, = data_row\n\n        # GET http://user.sock-shop/login (endp 31)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/items (endp 18)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n        # GET http://user.sock-shop/cards/{cardId} (endp 20)\n        resp = user_sock_shop.get(f'/cards/{cardId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n\n",
 "5": "    @json_dataset('data/dataset_5.json')\n    @clear_session({'spanId': 5})\n    def test_05_get_cart(self, data_row):\n        size, = data_row\n\n        # GET http://front-end.sock-shop/tags (endp 17)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/tags', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        tags = jsonpath('$.tags[*]', resp)\n\n        # GET http://front-end.sock-shop/catalogue (endp 11)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n        # GET http://front-end.sock-shop/cart (endp 5)\n        resp = front_end_sock_shop.get('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "6": "    @clear_session({'spanId': 6})\n    def test_06_delete_cart(self):\n        # DELETE http://front-end.sock-shop/cart (endp 6)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.delete('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(202)\n\n",
 "7": "    @json_dataset('data/dataset_7.json')\n    @clear_session({'spanId': 7})\n    def test_07_post_cart(self, data_row):\n        size, = data_row\n\n        # GET http://front-end.sock-shop/tags (endp 17)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/tags', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        tags = jsonpath('$.tags[*]', resp)\n\n        # GET http://front-end.sock-shop/catalogue (endp 11)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n        # GET http://front-end.sock-shop/cart (endp 5)\n        resp = front_end_sock_shop.get('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$[*].itemId', resp)\n\n        # POST http://front-end.sock-shop/orders (endp 16)\n        resp = front_end_sock_shop.post('/orders', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        quantity = jsonpath('$.items[*].quantity', resp)\n\n        # POST http://front-end.sock-shop/cart (endp 7)\n        with open('data/payload_for_endp_7.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', id_)\n        resp = front_end_sock_shop.post('/cart', json=json_payload, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n\n",
 "8": "    @json_dataset('data/dataset_8.json')\n    @clear_session({'spanId': 8})\n    def test_08_delete_cart_itemId(self, data_row):\n        size, = data_row\n\n        # GET http://front-end.sock-shop/tags (endp 17)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/tags', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        tags = jsonpath('$.tags[*]', resp)\n\n        # GET http://front-end.sock-shop/catalogue (endp 11)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n        # GET http://front-end.sock-shop/cart (endp 5)\n        resp = front_end_sock_shop.get('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        itemId = jsonpath('$[*].itemId', resp)\n\n        # DELETE http://front-end.sock-shop/cart/{itemId} (endp 8)\n        resp = front_end_sock_shop.delete(f'/cart/{itemId}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(202)\n\n",
 "32": "    @json_dataset('data/dataset_32.json')\n    @clear_session({'spanId': 32})\n    def test_32_delete_carts_customerId(self, data_row):\n        size, = data_row\n\n        # GET http://catalogue.sock-shop/tags (endp 27)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        resp = catalogue_sock_shop.get('/tags')\n        resp.assert_status_code(200)\n        tags = jsonpath('$.tags[*]', resp)\n\n        # GET http://catalogue.sock-shop/catalogue (endp 24)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = catalogue_sock_shop.get('/catalogue' + qstr)\n        resp.assert_status_code(200)\n\n        # GET http://user.sock-shop/login (endp 31)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # DELETE http://carts.sock-shop/carts/{customerId} (endp 32)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.delete(f'/carts/{customerId}')\n        resp.assert_status_code(202)\n\n",
 "18": "    @clear_session({'spanId': 18})\n    def test_18_get_carts_customerId_items(self):\n        # GET http://user.sock-shop/login (endp 31)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/items (endp 18)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n",
 "33": "    @json_dataset('data/dataset_33.json')\n    @clear_session({'spanId': 33})\n    def test_33_post_carts_customerId_items(self, data_row):\n        sessionId, size = data_row\n\n        # GET http://catalogue.sock-shop/tags (endp 27)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        resp = catalogue_sock_shop.get('/tags')\n        resp.assert_status_code(200)\n        tags = jsonpath('$.tags[*]', resp)\n\n        # GET http://catalogue.sock-shop/catalogue (endp 24)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = catalogue_sock_shop.get('/catalogue' + qstr)\n        resp.assert_status_code(200)\n        itemId = jsonpath('$[*].id', resp)\n        id_ = jsonpath('$[*].id', resp)\n\n        # GET http://user.sock-shop/login (endp 31)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/merge (endp 35)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        qstr = '?' + urlencode([('sessionId', sessionId)])\n        resp = carts_sock_shop.get(f'/carts/{customerId}/merge' + qstr)\n        resp.assert_status_code(202)\n\n        # GET http://catalogue.sock-shop/catalogue/{id} (endp 25)\n        resp = catalogue_sock_shop.get(f'/catalogue/{id_}')\n        resp.assert_status_code(200)\n        unitPrice = jsonpath('$.price', resp)\n\n        # POST http://carts.sock-shop/carts/{customerId}/items (endp 33)\n        with open('data/payload_for_endp_33.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.itemId', itemId)\n        apply_into_json(json_payload, '$.unitPrice', unitPrice)\n        resp = carts_sock_shop.post(f'/carts/{customerId}/items', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n\n",
 "34": "    @clear_session({'spanId': 34})\n    def test_34_delete_carts_customerId_items_itemId(self):\n        # GET http://user.sock-shop/login (endp 31)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/items (endp 18)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n        itemId = jsonpath('$[*].itemId', resp)\n\n        # DELETE http://carts.sock-shop/carts/{customerId}/items/{itemId} (endp 34)\n        resp = carts_sock_shop.delete(f'/carts/{customerId}/items/{itemId}')\n        resp.assert_status_code(202)\n\n",
 "35": "    @json_dataset('data/dataset_35.json')\n    @clear_session({'spanId': 35})\n    def test_35_get_carts_customerId_merge(self, data_row):\n        sessionId, = data_row\n\n        # GET http://user.sock-shop/login (endp 31)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/merge (endp 35)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        qstr = '?' + urlencode([('sessionId', sessionId)])\n        resp = carts_sock_shop.get(f'/carts/{customerId}/merge' + qstr)\n        resp.assert_status_code(202)\n\n",
 "11": "    @json_dataset('data/dataset_11.json')\n    @clear_session({'spanId': 11})\n    def test_11_get_catalogue(self, data_row):\n        size, = data_row\n\n        # GET http://front-end.sock-shop/tags (endp 17)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/tags', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        tags = jsonpath('$.tags[*]', resp)\n\n        # GET http://front-end.sock-shop/catalogue (endp 11)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "24": "    @json_dataset('data/dataset_24.json')\n    @clear_session({'spanId': 24})\n    def test_24_get_catalogue(self, data_row):\n        size, = data_row\n\n        # GET http://catalogue.sock-shop/tags (endp 27)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        resp = catalogue_sock_shop.get('/tags')\n        resp.assert_status_code(200)\n        tags = jsonpath('$.tags[*]', resp)\n\n        # GET http://catalogue.sock-shop/catalogue (endp 24)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = catalogue_sock_shop.get('/catalogue' + qstr)\n        resp.assert_status_code(200)\n\n",
 "9": "    @json_dataset('data/dataset_9.json')\n    @clear_session({'spanId': 9})\n    def test_09_get_catalogue_id(self, data_row):\n        size, = data_row\n\n        # GET http://front-end.sock-shop/tags (endp 17)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/tags', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        tags = jsonpath('$.tags[*]', resp)\n\n        # GET http://front-end.sock-shop/catalogue (endp 11)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$[*].id', resp)\n\n        # GET http://front-end.sock-shop/catalogue/{id} (endp 9)\n        resp = front_end_sock_shop.get(f'/catalogue/{id_}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "25": "    @json_dataset('data/dataset_25.json')\n    @clear_session({'spanId': 25})\n    def test_25_get_catalogue_id(self, data_row):\n        size, = data_row\n\n        # GET http://catalogue.sock-shop/tags (endp 27)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        resp = catalogue_sock_shop.get('/tags')\n        resp.assert_status_code(200)\n        tags = jsonpath('$.tags[*]', resp)\n\n        # GET http://catalogue.sock-shop/catalogue (endp 24)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('sort', 'id'), ('tags', tags)])\n        resp = catalogue_sock_shop.get('/catalogue' + qstr)\n        resp.assert_status_code(200)\n        id_ = jsonpath('$[*].id', resp)\n\n        # GET http://catalogue.sock-shop/catalogue/{id} (endp 25)\n        resp = catalogue_sock_shop.get(f'/catalogue/{id_}')\n        resp.assert_status_code(200)\n\n",
 "10": "    @clear_session({'spanId': 10})\n    def test_10_get_catalogue_size(self):\n        # GET http://front-end.sock-shop/catalogue/size (endp 10)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('tags', '')])\n        resp = front_end_sock_shop.get('/catalogue/size' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "26": "    @clear_session({'spanId': 26})\n    def test_26_get_catalogue_size(self):\n        # GET http://catalogue.sock-shop/catalogue/size (endp 26)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        qstr = '?' + urlencode([('tags', '')])\n        resp = catalogue_sock_shop.get('/catalogue/size' + qstr)\n        resp.assert_status_code(200)\n\n",
 "12": "    @clear_session({'spanId': 12})\n    def test_12_get_category_html(self):\n        # GET http://front-end.sock-shop/category.html (endp 12)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/category.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.panel.panel-default.sidebar-menu div.panel-heading h3.panel-title', expected_value='Filters ')\n\n",
 "13": "    @clear_session({'spanId': 13})\n    def test_13_get_customers_customerId(self):\n        # GET http://front-end.sock-shop/login (endp 15)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/login', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_cssselect('p', expected_value='Cookie is set')\n        customerId = get_data_from_cookie('logged_in')\n\n        # GET http://front-end.sock-shop/customers/{customerId} (endp 13)\n        resp = front_end_sock_shop.get(f'/customers/{customerId}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.lastName', expected_value='Name')\n\n",
 "21": "    @clear_session({'spanId': 21})\n    def test_21_get_customers_customerId(self):\n        # GET http://user.sock-shop/login (endp 31)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/items (endp 18)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n        # GET http://user.sock-shop/customers/{customerId} (endp 21)\n        resp = user_sock_shop.get(f'/customers/{customerId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.lastName', expected_value='Name')\n\n",
 "29": "    @clear_session({'spanId': 29})\n    def test_29_get_customers_customerId_addresses(self):\n        # GET http://user.sock-shop/login (endp 31)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://user.sock-shop/customers/{customerId}/cards (endp 30)\n        resp = user_sock_shop.get(f'/customers/{customerId}/cards')\n        resp.assert_status_code(200)\n\n        # GET http://user.sock-shop/customers/{customerId}/addresses (endp 29)\n        resp = user_sock_shop.get(f'/customers/{customerId}/addresses')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$._embedded.address[*].city', expected_value='Glasgow')\n\n",
 "30": "    @clear_session({'spanId': 30})\n    def test_30_get_customers_customerId_cards(self):\n        # GET http://user.sock-shop/login (endp 31)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://user.sock-shop/customers/{customerId}/cards (endp 30)\n        resp = user_sock_shop.get(f'/customers/{customerId}/cards')\n        resp.assert_status_code(200)\n\n",
 "14": "    @clear_session({'spanId': 14})\n    def test_14_get_detail_html(self):\n        # POST http://front-end.sock-shop/orders (endp 16)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.post('/orders', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n        id_ = jsonpath('$.items[*].itemId', resp)\n\n        # GET http://front-end.sock-shop/detail.html (endp 14)\n        qstr = '?' + urlencode([('id', id_)])\n        resp = front_end_sock_shop.get('/detail.html' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.row.same-height-row div div.box.same-height h3', expected_value='You may also like these products')\n\n",
 "15": "    @clear_session({'spanId': 15})\n    def test_15_get_login(self):\n        # GET http://front-end.sock-shop/login (endp 15)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/login', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_cssselect('p', expected_value='Cookie is set')\n\n",
 "31": "    @clear_session({'spanId': 31})\n    def test_31_get_login(self):\n        # GET http://user.sock-shop/login (endp 31)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n\n",
 "16": "    @clear_session({'spanId': 16})\n    def test_16_post_orders(self):\n        # POST http://front-end.sock-shop/orders (endp 16)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.post('/orders', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n\n",
 "37": "    @json_dataset('data/dataset_37.json')\n    @clear_session({'spanId': 37})\n    def test_37_post_orders(self, data_row):\n        items, = data_row\n\n        # GET http://user.sock-shop/login (endp 31)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/items (endp 18)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n        # GET http://user.sock-shop/customers/{customerId}/cards (endp 30)\n        resp = user_sock_shop.get(f'/customers/{customerId}/cards')\n        resp.assert_status_code(200)\n        card = jsonpath('$._embedded.card[*]._links.card.href', resp)\n\n        # GET http://user.sock-shop/customers/{customerId} (endp 21)\n        resp = user_sock_shop.get(f'/customers/{customerId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.lastName', expected_value='Name')\n        customer = jsonpath('$._links.self.href', resp)\n\n        # GET http://user.sock-shop/customers/{customerId}/addresses (endp 29)\n        resp = user_sock_shop.get(f'/customers/{customerId}/addresses')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$._embedded.address[*].city', expected_value='Glasgow')\n        address = jsonpath('$._embedded.address[*]._links.address.href', resp)\n\n        # POST http://orders.sock-shop/orders (endp 37)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_37.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n        resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n\n",
 "64": "    @clear_session({'spanId': 64})\n    def test_64_get_orders(self):\n        # GET http://front-end.sock-shop/orders (endp 64)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/orders', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(201)\n\n",
 "38": "    @json_dataset('data/dataset_38.json')\n    @clear_session({'spanId': 38})\n    def test_38_get_orders_search_customerId(self, data_row):\n        custId, = data_row\n\n        # GET http://orders.sock-shop/orders/search/customerId (endp 38)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        qstr = '?' + urlencode([('custId', custId), ('sort', 'date')])\n        resp = orders_sock_shop.get('/orders/search/customerId' + qstr)\n        resp.assert_status_code(200)\n\n",
 "22": "    @json_dataset('data/dataset_22.json')\n    @clear_session({'spanId': 22})\n    def test_22_post_paymentAuth(self, data_row):\n        addresseId, cardId, country, longNum, number, postcode = data_row\n\n        # GET http://user.sock-shop/login (endp 31)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://carts.sock-shop/carts/{customerId}/items (endp 18)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n        # GET http://user.sock-shop/customers/{customerId} (endp 21)\n        resp = user_sock_shop.get(f'/customers/{customerId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.lastName', expected_value='Name')\n        firstName = jsonpath('$.firstName', resp)\n\n        # GET http://user.sock-shop/cards/{cardId} (endp 20)\n        resp = user_sock_shop.get(f'/cards/{cardId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        ccv = jsonpath('$.ccv', resp)\n        expires = jsonpath('$.expires', resp)\n\n        # GET http://user.sock-shop/addresses/{addresseId} (endp 19)\n        resp = user_sock_shop.get(f'/addresses/{addresseId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.city', expected_value='Glasgow')\n        street = jsonpath('$.street', resp)\n\n        # POST http://payment.sock-shop/paymentAuth (endp 22)\n        payment_sock_shop = get_http_client('http://payment.sock-shop', authenticate)\n        with open('data/payload_for_endp_22.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address.country', country)\n        apply_into_json(json_payload, '$.address.number', number)\n        apply_into_json(json_payload, '$.address.postcode', postcode)\n        apply_into_json(json_payload, '$.address.street', street)\n        apply_into_json(json_payload, '$.amount', float(random.uniform(4.99, 270.96997)))\n        apply_into_json(json_payload, '$.card.ccv', ccv)\n        apply_into_json(json_payload, '$.card.expires', expires)\n        apply_into_json(json_payload, '$.card.longNum', longNum)\n        resp = payment_sock_shop.post('/paymentAuth', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n",
 "23": "    @json_dataset('data/dataset_23.json')\n    @clear_session({'spanId': 23})\n    def test_23_post_shipping(self, data_row):\n        name, = data_row\n\n        # POST http://shipping.sock-shop/shipping (endp 23)\n        shipping_sock_shop = get_http_client('http://shipping.sock-shop', authenticate)\n        with open('data/payload_for_endp_23.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', str(uuid.uuid4()))\n        apply_into_json(json_payload, '$.name', name)\n        resp = shipping_sock_shop.post('/shipping', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n\n",
 "39": "    @json_dataset('data/dataset_39.json')\n    @clear_session({'spanId': 39})\n    def test_39_put_shipping_task(self, data_row):\n        name, = data_row\n\n        # PUT kafka://kafka/shipping-task (endp 39)\n        kafka = Kafka('TARGET_KAFKA')\n        with open('data/payload_for_endp_39.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', str(uuid.uuid4()))\n        apply_into_json(json_payload, '$.name', name)\n        resp = kafka.put('/shipping-task', json=json_payload)\n\n",
 "17": "    @clear_session({'spanId': 17})\n    def test_17_get_tags(self):\n        # GET http://front-end.sock-shop/tags (endp 17)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/tags', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "27": "    @clear_session({'spanId': 27})\n    def test_27_get_tags(self):\n        # GET http://catalogue.sock-shop/tags (endp 27)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        resp = catalogue_sock_shop.get('/tags')\n        resp.assert_status_code(200)\n\n"
}