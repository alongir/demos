package up9_autogenerated_tests

import (
    . "authentication"
    . "up9lib"
    assert "github.com/stretchr/testify/assert"
    testing "testing"
)

func TestGetCustomersCustomerid15(t *testing.T) {
    // POST http://orders/orders (endp 57)
    address := "http://user/addresses/57a98d98e4b00679b4a830b0"
    card := "http://user/cards/57a98d98e4b00679b4a830b1"
    customer := "http://user/customers/57a98d98e4b00679b4a830b2"
    items := "http://127.0.0.1:15300/carts/57a98d98e4b00679b4a830b2/items"
    orders := GetHttpTarget(t, "TARGET_ORDERS", new(Authentication))
    req := new(HttpRequest)
    req.SetHeaders(map[string]interface{}{
        "accept": "application/json",
        "content-type": "application/json",
    })
    req.SetJsonBody("data/payload_for_endp_57.json", map[string]interface{}{
        "$.address": address,
        "$.card": card,
        "$.customer": customer,
        "$.items": items,
    })
    resp := orders.Post(req, "/orders")
    assert.Equal(t, 201, resp.StatusCode())
    assert.Equal(t, "Glasgow", JsonPath(t, "$.address.city", resp.String()))
    customerId := JsonPath(t, "$.customerId", resp.String())

    // GET http://user/customers/{customerId} (endp 15)
    user := GetHttpTarget(t, "TARGET_USER", new(Authentication))
    req2 := new(HttpRequest)
    resp2 := user.Get(req2, "/customers/" + customerId)
    assert.Equal(t, "Name", JsonPath(t, "$.lastName", resp2.String()))
}

// authentication-related test
func TestGetLogin16(t *testing.T) {
    // GET http://user/login (endp 16)
    user := GetHttpTarget(t, "TARGET_USER", new(DummyAuth))
    req := new(HttpRequest)
    resp := user.Get(req, "/login")
    assert.Equal(t, "Name", JsonPath(t, "$.user.lastName", resp.String()))
}
