package up9_autogenerated_tests

import (
    . "authentication"
    . "up9lib"
    assert "github.com/stretchr/testify/assert"
    regexp "regexp"
    testing "testing"
)

func TestGetCatalogueId54(t *testing.T) {
    // GET http://catalogue/catalogue (endp 10)
    size := "5"
    catalogue := GetHttpTarget(t, "TARGET_CATALOGUE", new(Authentication))
    req := new(HttpRequest)
    req.SetQueryString(map[string]interface{}{
        "page": "1",
        "size": size,
        "tags": "",
    })
    resp := catalogue.Get(req, "/catalogue")
    assert.Regexp(t, regexp.MustCompile(".*Holy.*"), resp.String())
    id := JsonPath(t, "$[*].id", resp.String())

    // GET http://catalogue/catalogue/{id} (endp 54)
    req2 := new(HttpRequest)
    resp2 := catalogue.Get(req2, "/catalogue/" + id)
    assert.Equal(t, 200, resp2.StatusCode())
}

func TestGetCatalogueSize09(t *testing.T) {
    // GET http://catalogue/catalogue/size (endp 9)
    catalogue := GetHttpTarget(t, "TARGET_CATALOGUE", new(Authentication))
    req := new(HttpRequest)
    req.SetQueryString(map[string]interface{}{
        "tags": "",
    })
    resp := catalogue.Get(req, "/catalogue/size")
    assert.Equal(t, 200, resp.StatusCode())
}

func TestGetTags11(t *testing.T) {
    // GET http://catalogue/tags (endp 11)
    catalogue := GetHttpTarget(t, "TARGET_CATALOGUE", new(Authentication))
    req := new(HttpRequest)
    resp := catalogue.Get(req, "/tags")
    assert.Equal(t, 200, resp.StatusCode())
}
