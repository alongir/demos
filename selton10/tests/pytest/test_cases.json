{
 "1": "    @clear_session({'spanId': 1})\n    def test_01_get_(self):\n        # GET http://front-end.sock-shop/ (endp 1)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "3": "    @json_dataset('data/dataset_3.json')\n    @clear_session({'spanId': 3})\n    def test_03_get_addresses_addresseId(self, data_row):\n        addresseId, = data_row\n\n        # GET http://user.sock-shop/addresses/{addresseId} (endp 3)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/addresses/{addresseId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.city', expected_value='Glasgow')\n\n",
 "4": "    @json_dataset('data/dataset_4.json')\n    @clear_session({'spanId': 4})\n    def test_04_get_cards_cardId(self, data_row):\n        cardId, = data_row\n\n        # GET http://user.sock-shop/cards/{cardId} (endp 4)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/cards/{cardId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "12": "    @json_dataset('data/dataset_12.json')\n    @clear_session({'spanId': 12})\n    def test_12_delete_carts_customerId(self, data_row):\n        customerId, = data_row\n\n        # DELETE http://carts.sock-shop/carts/{customerId} (endp 12)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.delete(f'/carts/{customerId}')\n        resp.assert_ok()\n        # resp.assert_status_code(202)\n\n",
 "2": "    @json_dataset('data/dataset_2.json')\n    @clear_session({'spanId': 2})\n    def test_02_get_carts_customerId_items(self, data_row):\n        customerId, = data_row\n\n        # GET http://carts.sock-shop/carts/{customerId}/items (endp 2)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "13": "    @json_dataset('data/dataset_13.json')\n    @clear_session({'spanId': 13})\n    def test_13_post_carts_customerId_items(self, data_row):\n        customerId, itemId, unitPrice = data_row\n\n        # POST http://carts.sock-shop/carts/{customerId}/items (endp 13)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        with open('data/payload_for_endp_13.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.itemId', itemId)\n        apply_into_json(json_payload, '$.unitPrice', unitPrice)\n        resp = carts_sock_shop.post(f'/carts/{customerId}/items', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n\n",
 "14": "    @json_dataset('data/dataset_14.json')\n    @clear_session({'spanId': 14})\n    def test_14_get_carts_customerId_merge(self, data_row):\n        customerId, sessionId = data_row\n\n        # GET http://carts.sock-shop/carts/{customerId}/merge (endp 14)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        qstr = '?' + urlencode([('sessionId', sessionId)])\n        resp = carts_sock_shop.get(f'/carts/{customerId}/merge' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(202)\n\n",
 "8": "    @json_dataset('data/dataset_8.json')\n    @clear_session({'spanId': 8})\n    def test_08_get_catalogue(self, data_row):\n        size, = data_row\n\n        # GET http://catalogue.sock-shop/catalogue (endp 8)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('tags', '')])\n        resp = catalogue_sock_shop.get('/catalogue' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "9": "    @clear_session({'spanId': 9})\n    def test_09_get_catalogue_size(self):\n        # GET http://catalogue.sock-shop/catalogue/size (endp 9)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        qstr = '?' + urlencode([('tags', '')])\n        resp = catalogue_sock_shop.get('/catalogue/size' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "5": "    @json_dataset('data/dataset_5.json')\n    @clear_session({'spanId': 5})\n    def test_05_get_customers_id(self, data_row):\n        id_, = data_row\n\n        # GET http://user.sock-shop/customers/{id} (endp 5)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/customers/{id_}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.lastName', expected_value='Name')\n\n",
 "18": "    @json_dataset('data/dataset_18.json')\n    @clear_session({'spanId': 18})\n    def test_18_get_customers_id_addresses(self, data_row):\n        id_, = data_row\n\n        # GET http://user.sock-shop/customers/{id}/addresses (endp 18)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/customers/{id_}/addresses')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$._embedded.address[*].city', expected_value='Glasgow')\n\n",
 "19": "    @json_dataset('data/dataset_19.json')\n    @clear_session({'spanId': 19})\n    def test_19_get_customers_id_cards(self, data_row):\n        id_, = data_row\n\n        # GET http://user.sock-shop/customers/{id}/cards (endp 19)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/customers/{id_}/cards')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "20": "    @clear_session({'spanId': 20})\n    def test_20_get_login(self):\n        # GET http://user.sock-shop/login (endp 20)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n\n",
 "21": "    @json_dataset('data/dataset_21.json')\n    @clear_session({'spanId': 21})\n    def test_21_post_orders(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 21)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_21.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n        # resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n\n",
 "6": "    @json_dataset('data/dataset_6.json')\n    @clear_session({'spanId': 6})\n    def test_06_post_paymentAuth(self, data_row):\n        ccv, country, expires, longNum, number, postcode, street = data_row\n\n        # POST http://payment.sock-shop/paymentAuth (endp 6)\n        payment_sock_shop = get_http_client('http://payment.sock-shop', authenticate)\n        with open('data/payload_for_endp_6.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address.country', country)\n        apply_into_json(json_payload, '$.address.number', number)\n        apply_into_json(json_payload, '$.address.postcode', postcode)\n        apply_into_json(json_payload, '$.address.street', street)\n        apply_into_json(json_payload, '$.amount', float(random.uniform(4.99, 350.94)))\n        apply_into_json(json_payload, '$.card.ccv', ccv)\n        apply_into_json(json_payload, '$.card.expires', expires)\n        apply_into_json(json_payload, '$.card.longNum', longNum)\n        resp = payment_sock_shop.post('/paymentAuth', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "7": "    @json_dataset('data/dataset_7.json')\n    @clear_session({'spanId': 7})\n    def test_07_post_shipping(self, data_row):\n        name, = data_row\n\n        # POST http://shipping.sock-shop/shipping (endp 7)\n        shipping_sock_shop = get_http_client('http://shipping.sock-shop', authenticate)\n        with open('data/payload_for_endp_7.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', str(uuid.uuid4()))\n        apply_into_json(json_payload, '$.name', name)\n        resp = shipping_sock_shop.post('/shipping', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n\n",
 "11": "    @clear_session({'spanId': 11})\n    def test_11_get_tags(self):\n        # GET http://catalogue.sock-shop/tags (endp 11)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        resp = catalogue_sock_shop.get('/tags')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n"
}