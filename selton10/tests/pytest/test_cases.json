{
 "1": "    @clear_session({'spanId': 1})\n    def test_001_get_(self):\n        # GET http://front-end.sock-shop/ (endp 1)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "66": "    @clear_session({'spanId': 66})\n    def test_066_get_address(self):\n        # GET http://front-end.sock-shop/address (endp 66)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/address', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.city', expected_value='Glasgow')\n\n",
 "17": "    @json_dataset('data/dataset_17.json')\n    @clear_session({'spanId': 17})\n    def test_017_get_addresses_addresseId(self, data_row):\n        addresseId, = data_row\n\n        # GET http://user.sock-shop/addresses/{addresseId} (endp 17)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/addresses/{addresseId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.city', expected_value='Glasgow')\n\n",
 "67": "    @clear_session({'spanId': 67})\n    def test_067_get_card(self):\n        # GET http://front-end.sock-shop/card (endp 67)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/card', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "51": "    @json_dataset('data/dataset_51.json')\n    @clear_session({'spanId': 51})\n    def test_051_post_cards(self, data_row):\n        ccv, expires, longNum, userID = data_row\n\n        # POST http://user.sock-shop/cards (endp 51)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        with open('data/payload_for_endp_51.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.ccv', ccv)\n        apply_into_json(json_payload, '$.expires', expires)\n        apply_into_json(json_payload, '$.longNum', longNum)\n        apply_into_json(json_payload, '$.userID', userID)\n        resp = user_sock_shop.post('/cards', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "18": "    @json_dataset('data/dataset_18.json')\n    @clear_session({'spanId': 18})\n    def test_018_get_cards_cardId(self, data_row):\n        cardId, = data_row\n\n        # GET http://user.sock-shop/cards/{cardId} (endp 18)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/cards/{cardId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "22": "    @clear_session({'spanId': 22})\n    def test_022_get_cart(self):\n        # GET http://front-end.sock-shop/cart (endp 22)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "69": "    @json_dataset('data/dataset_69.json')\n    @clear_session({'spanId': 69})\n    def test_069_post_cart(self, data_row):\n        id_, = data_row\n\n        # POST http://front-end.sock-shop/cart (endp 69)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        with open('data/payload_for_endp_69.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', id_)\n        resp = front_end_sock_shop.post('/cart', json=json_payload, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n\n",
 "83": "    @clear_session({'spanId': 83})\n    def test_083_delete_cart(self):\n        # DELETE http://front-end.sock-shop/cart (endp 83)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.delete('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(202)\n\n",
 "70": "    @json_dataset('data/dataset_70.json')\n    @clear_session({'spanId': 70})\n    def test_070_delete_cart_id(self, data_row):\n        id_, = data_row\n\n        # DELETE http://front-end.sock-shop/cart/{id} (endp 70)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.delete(f'/cart/{id_}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(202)\n\n",
 "6": "    @json_dataset('data/dataset_6.json')\n    @clear_session({'spanId': 6})\n    def test_006_delete_carts_customerId(self, data_row):\n        customerId, = data_row\n\n        # DELETE http://carts.sock-shop/carts/{customerId} (endp 6)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.delete(f'/carts/{customerId}')\n        resp.assert_ok()\n        # resp.assert_status_code(202)\n\n",
 "7": "    @json_dataset('data/dataset_7.json')\n    @clear_session({'spanId': 7})\n    def test_007_post_carts_customerId_items(self, data_row):\n        customerId, itemId, unitPrice = data_row\n\n        # POST http://carts.sock-shop/carts/{customerId}/items (endp 7)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        with open('data/payload_for_endp_7.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.itemId', itemId)\n        apply_into_json(json_payload, '$.unitPrice', unitPrice)\n        resp = carts_sock_shop.post(f'/carts/{customerId}/items', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n\n",
 "9": "    @json_dataset('data/dataset_9.json')\n    @clear_session({'spanId': 9})\n    def test_009_get_carts_customerId_items(self, data_row):\n        customerId, = data_row\n\n        # GET http://carts.sock-shop/carts/{customerId}/items (endp 9)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "44": "    @json_dataset('data/dataset_44.json')\n    @clear_session({'spanId': 44})\n    def test_044_delete_carts_customerId_items_itemId(self, data_row):\n        customerId, itemId = data_row\n\n        # DELETE http://carts.sock-shop/carts/{customerId}/items/{itemId} (endp 44)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        resp = carts_sock_shop.delete(f'/carts/{customerId}/items/{itemId}')\n        resp.assert_ok()\n        # resp.assert_status_code(202)\n\n",
 "8": "    @json_dataset('data/dataset_8.json')\n    @clear_session({'spanId': 8})\n    def test_008_get_carts_customerId_merge(self, data_row):\n        customerId, sessionId = data_row\n\n        # GET http://carts.sock-shop/carts/{customerId}/merge (endp 8)\n        carts_sock_shop = get_http_client('http://carts.sock-shop', authenticate)\n        qstr = '?' + urlencode([('sessionId', sessionId)])\n        resp = carts_sock_shop.get(f'/carts/{customerId}/merge' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(202)\n\n",
 "2": "    @json_dataset('data/dataset_2.json')\n    @clear_session({'spanId': 2})\n    def test_002_get_catalogue(self, data_row):\n        size, tags = data_row\n\n        # GET http://catalogue.sock-shop/catalogue (endp 2)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('tags', tags)])\n        resp = catalogue_sock_shop.get('/catalogue' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "23": "    @json_dataset('data/dataset_23.json')\n    @clear_session({'spanId': 23})\n    def test_023_get_catalogue(self, data_row):\n        size, tags = data_row\n\n        # GET http://front-end.sock-shop/catalogue (endp 23)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('page', '1'), ('size', size), ('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "35": "    @json_dataset('data/dataset_35.json')\n    @clear_session({'spanId': 35})\n    def test_035_get_catalogue_id(self, data_row):\n        id_, = data_row\n\n        # GET http://catalogue.sock-shop/catalogue/{id} (endp 35)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        resp = catalogue_sock_shop.get(f'/catalogue/{id_}')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "71": "    @json_dataset('data/dataset_71.json')\n    @clear_session({'spanId': 71})\n    def test_071_get_catalogue_id(self, data_row):\n        id_, = data_row\n\n        # GET http://front-end.sock-shop/catalogue/{id} (endp 71)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get(f'/catalogue/{id_}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "3": "    @json_dataset('data/dataset_3.json')\n    @clear_session({'spanId': 3})\n    def test_003_get_catalogue_size(self, data_row):\n        tags, = data_row\n\n        # GET http://catalogue.sock-shop/catalogue/size (endp 3)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        qstr = '?' + urlencode([('tags', tags)])\n        resp = catalogue_sock_shop.get('/catalogue/size' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "25": "    @json_dataset('data/dataset_25.json')\n    @clear_session({'spanId': 25})\n    def test_025_get_catalogue_size(self, data_row):\n        tags, = data_row\n\n        # GET http://front-end.sock-shop/catalogue/size (endp 25)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('tags', tags)])\n        resp = front_end_sock_shop.get('/catalogue/size' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "27": "    @clear_session({'spanId': 27})\n    def test_027_get_category_html(self):\n        # GET http://front-end.sock-shop/category.html (endp 27)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('tags', 'black')])\n        resp = front_end_sock_shop.get('/category.html' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#content div.container div div.panel.panel-default.sidebar-menu div.panel-heading h3.panel-title', expected_value='Filters ')\n\n",
 "87": "    @json_dataset('data/dataset_87.json')\n    @clear_session({'spanId': 87})\n    def test_087_get_customer_order_html(self, data_row):\n        order, = data_row\n\n        # GET http://front-end.sock-shop/customer-order.html (endp 87)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        qstr = '?' + urlencode([('order', order)])\n        resp = front_end_sock_shop.get('/customer-order.html' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#customer-order div.box h2', expected_value='Order #')\n\n",
 "11": "    @json_dataset('data/dataset_11.json')\n    @clear_session({'spanId': 11})\n    def test_011_get_customers_customerId(self, data_row):\n        customerId, = data_row\n\n        # GET http://user.sock-shop/customers/{customerId} (endp 11)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/customers/{customerId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.lastName', expected_value='Name')\n\n",
 "75": "    @json_dataset('data/dataset_75.json')\n    @clear_session({'spanId': 75})\n    def test_075_get_customers_customerId(self, data_row):\n        customerId, = data_row\n\n        # GET http://front-end.sock-shop/customers/{customerId} (endp 75)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get(f'/customers/{customerId}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.lastName', expected_value='Name')\n\n",
 "12": "    @json_dataset('data/dataset_12.json')\n    @clear_session({'spanId': 12})\n    def test_012_get_customers_customerId_addresses(self, data_row):\n        customerId, = data_row\n\n        # GET http://user.sock-shop/customers/{customerId}/addresses (endp 12)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/customers/{customerId}/addresses')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$._embedded.address[*].city', expected_value='Glasgow')\n\n",
 "13": "    @json_dataset('data/dataset_13.json')\n    @clear_session({'spanId': 13})\n    def test_013_get_customers_customerId_cards(self, data_row):\n        customerId, = data_row\n\n        # GET http://user.sock-shop/customers/{customerId}/cards (endp 13)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get(f'/customers/{customerId}/cards')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "32": "    @clear_session({'spanId': 32})\n    def test_032_get_footer_html(self):\n        # GET http://front-end.sock-shop/footer.html (endp 32)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/footer.html', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#copyright div.container div p.pull-left a', expected_value='Weaveworks')\n\n",
 "89": "    @clear_session({'spanId': 89})\n    def test_089_get_index_html(self):\n        # GET http://front-end.sock-shop/index.html (endp 89)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/index.html')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "14": "    @clear_session({'spanId': 14})\n    def test_014_get_login(self):\n        # GET http://user.sock-shop/login (endp 14)\n        user_sock_shop = get_http_client('http://user.sock-shop', authenticate)\n        resp = user_sock_shop.get('/login')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n\n",
 "33": "    @clear_session({'spanId': 33})\n    def test_033_get_navbar_html(self):\n        # GET http://front-end.sock-shop/navbar.html (endp 33)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/navbar.html', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "15": "    @json_dataset('data/dataset_15.json')\n    @clear_session({'spanId': 15})\n    def test_015_post_orders(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders.sock-shop/orders (endp 15)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        with open('data/payload_for_endp_15.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders_sock_shop.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n        # resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n\n",
 "90": "    @clear_session({'spanId': 90})\n    def test_090_get_orders(self):\n        # GET http://front-end.sock-shop/orders (endp 90)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/orders', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n        # resp.assert_jsonpath('$[*].address.city', expected_value='Glasgow')\n\n",
 "91": "    @clear_session({'spanId': 91})\n    def test_091_post_orders(self):\n        # POST http://front-end.sock-shop/orders (endp 91)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.post('/orders', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n        # resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n\n",
 "60": "    @json_dataset('data/dataset_60.json')\n    @clear_session({'spanId': 60})\n    def test_060_get_orders_id(self, data_row):\n        id_, = data_row\n\n        # GET http://orders.sock-shop/orders/{id} (endp 60)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        resp = orders_sock_shop.get(f'/orders/{id_}')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n\n",
 "124": "    @json_dataset('data/dataset_124.json')\n    @clear_session({'spanId': 124})\n    def test_124_get_orders_orderId(self, data_row):\n        orderId, = data_row\n\n        # GET http://front-end.sock-shop/orders/{orderId} (endp 124)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get(f'/orders/{orderId}', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n\n",
 "61": "    @json_dataset('data/dataset_61.json')\n    @clear_session({'spanId': 61})\n    def test_061_get_orders_search_customerId(self, data_row):\n        custId, = data_row\n\n        # GET http://orders.sock-shop/orders/search/customerId (endp 61)\n        orders_sock_shop = get_http_client('http://orders.sock-shop', authenticate)\n        qstr = '?' + urlencode([('custId', custId), ('sort', 'date')])\n        resp = orders_sock_shop.get('/orders/search/customerId' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$._embedded.customerOrders[*].address.city', expected_value='Glasgow')\n\n",
 "20": "    @json_dataset('data/dataset_20.json')\n    @clear_session({'spanId': 20})\n    def test_020_post_paymentAuth(self, data_row):\n        ccv, country, expires, longNum, number, postcode, street = data_row\n\n        # POST http://payment.sock-shop/paymentAuth (endp 20)\n        payment_sock_shop = get_http_client('http://payment.sock-shop', authenticate)\n        with open('data/payload_for_endp_20.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address.country', country)\n        apply_into_json(json_payload, '$.address.number', number)\n        apply_into_json(json_payload, '$.address.postcode', postcode)\n        apply_into_json(json_payload, '$.address.street', street)\n        apply_into_json(json_payload, '$.amount', float(random.uniform(4.99, 350.94)))\n        apply_into_json(json_payload, '$.card.ccv', ccv)\n        apply_into_json(json_payload, '$.card.expires', expires)\n        apply_into_json(json_payload, '$.card.longNum', longNum)\n        resp = payment_sock_shop.post('/paymentAuth', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "21": "    @json_dataset('data/dataset_21.json')\n    @clear_session({'spanId': 21})\n    def test_021_post_shipping(self, data_row):\n        name, = data_row\n\n        # POST http://shipping.sock-shop/shipping (endp 21)\n        shipping_sock_shop = get_http_client('http://shipping.sock-shop', authenticate)\n        with open('data/payload_for_endp_21.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', str(uuid.uuid4()))\n        apply_into_json(json_payload, '$.name', name)\n        resp = shipping_sock_shop.post('/shipping', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n\n",
 "92": "    @json_dataset('data/dataset_92.json')\n    @clear_session({'spanId': 92})\n    def test_092_put_shipping_task(self, data_row):\n        id_, name = data_row\n\n        # PUT kafka://kafka/shipping-task (endp 92)\n        kafka = Kafka('TARGET_KAFKA')\n        with open('data/payload_for_endp_92.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', id_)\n        apply_into_json(json_payload, '$.name', name)\n        resp = kafka.put('/shipping-task', json=json_payload)\n\n",
 "5": "    @clear_session({'spanId': 5})\n    def test_005_get_tags(self):\n        # GET http://catalogue.sock-shop/tags (endp 5)\n        catalogue_sock_shop = get_http_client('http://catalogue.sock-shop', authenticate)\n        resp = catalogue_sock_shop.get('/tags')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "28": "    @clear_session({'spanId': 28})\n    def test_028_get_tags(self):\n        # GET http://front-end.sock-shop/tags (endp 28)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/tags', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "34": "    @clear_session({'spanId': 34})\n    def test_034_get_topbar_html(self):\n        # GET http://front-end.sock-shop/topbar.html (endp 34)\n        front_end_sock_shop = get_http_client('http://front-end.sock-shop', authenticate)\n        resp = front_end_sock_shop.get('/topbar.html', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#top div.container div.offer a.btn.btn-success', expected_value='Offer of the day')\n\n"
}