# This is a Mockintosh configuration file.
# Mockintosh provides a microservices friendly, small footprint HTTP mock service.
# A standard laptop can run dozens of Mockintosh instances, or you can run all instances in a single Docker container.
#
# Install Mockintosh:                 pip3 install mockintosh
# Run locally:                        mockintosh <this-file>
# Run with Docker:                    docker run -it -p 8000-8005:8000-8005 -v `pwd`:/tmp testrio/mockintosh /tmp/<this-file>
# More information can be found here: https://github.com/up9inc/mockintosh

---
management:
  port: 8000
services:
- name: http://carts.sock-shop
  port: 8001
  managementRoot: __admin
  oas: '@mock-data/up9-http___carts.sock-shop-spec.json'
  endpoints:
  - path: /carts/{{customerId}}
    response:
      status: 202
    method: delete
  - path: /carts/{{customerId}}/items
    response:
      status: 201
      headers:
        Content-Type: application/json
      body: |-
        {
         "id": "609c781983630f00069a7136",
         "itemId": "{{jsonPath request.json '$.itemId'}}",
         "quantity": 1,
         "unitPrice": {{jsonPath request.json '$.unitPrice'}}
        }
    method: post
  - path: /carts/{{customerId}}/merge
    response:
      status: 202
  - path: /carts/{{customerId}}/items
    response:
      headers:
        Content-Type: application/json
      body: '[]'
- name: http://catalogue.sock-shop
  port: 8002
  managementRoot: __admin
  oas: '@mock-data/up9-http___catalogue.sock-shop-spec.json'
  endpoints:
  - path: /catalogue
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_catalogue_sock_shop_2.json'
  - path: /catalogue/size
    response:
      headers:
        Content-Type: application/json
      body: |-
        {
         "size": 9,
         "err": null
        }
      useTemplating: false
  - path: /tags
    response:
      headers:
        Content-Type: application/json
      body: |-
        {
         "tags": [
          "brown",
          "geek",
          "formal",
          "blue",
          "skin",
          "red",
          "action",
          "sport",
          "black",
          "magic",
          "green"
         ],
         "err": null
        }
      useTemplating: false
- name: http://front-end.sock-shop
  port: 8003
  managementRoot: __admin
  oas: '@mock-data/up9-http___front-end.sock-shop-spec.json'
  endpoints:
  - path: /
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_front_end_sock_shop_1.html'
      useTemplating: false
  - path: /cart
    response:
      headers:
        Content-Type: application/json
      body: '[]'
      useTemplating: false
  - path: /catalogue
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_front_end_sock_shop_23.json'
  - path: /catalogue/size
    response:
      headers:
        Content-Type: application/json
      body: |-
        {
         "size": 1,
         "err": null
        }
      useTemplating: false
  - path: /category.html
    response:
      headers:
        Content-Type: text/html
      body: '@mock-data/resp_front_end_sock_shop_27.html'
      useTemplating: false
  - path: /tags
    response:
      headers:
        Content-Type: application/json
      body: |-
        {
         "tags": [
          "brown",
          "geek",
          "formal",
          "blue",
          "skin",
          "red",
          "action",
          "sport",
          "black",
          "magic",
          "green"
         ],
         "err": null
        }
      useTemplating: false
- name: http://orders.sock-shop
  port: 8004
  managementRoot: __admin
  oas: '@mock-data/up9-http___orders.sock-shop-spec.json'
  endpoints:
  - path: /orders
    response:
      status: 201
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_orders_sock_shop_15.json'
    method: post
- name: http://payment.sock-shop
  port: 8005
  managementRoot: __admin
  oas: '@mock-data/up9-http___payment.sock-shop-spec.json'
  endpoints:
  - path: /paymentAuth
    response:
      headers:
        Content-Type: application/json
      body: |-
        {
         "authorised": true,
         "message": "Payment authorised"
        }
      useTemplating: false
    method: post
- name: http://shipping.sock-shop
  port: 8006
  managementRoot: __admin
  oas: '@mock-data/up9-http___shipping.sock-shop-spec.json'
  endpoints:
  - path: /shipping
    response:
      status: 201
      headers:
        Content-Type: application/json
      body: |-
        {
         "id": "{{jsonPath request.json '$.id'}}",
         "name": "{{jsonPath request.json '$.name'}}"
        }
    method: post
- name: http://user.sock-shop
  port: 8007
  managementRoot: __admin
  oas: '@mock-data/up9-http___user.sock-shop-spec.json'
  endpoints:
  - path: /customers/{{id}}
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_user_sock_shop_11.json'
  - path: /customers/{{id}}/addresses
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_user_sock_shop_12.json'
      useTemplating: false
  - path: /customers/{{id}}/cards
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_user_sock_shop_13.json'
      useTemplating: false
  - path: /login
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_user_sock_shop_14.json'
      useTemplating: false
  - path: /addresses/{{addresseId}}
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_user_sock_shop_17.json'
  - path: /cards/{{cardId}}
    response:
      headers:
        Content-Type: application/json
      body: '@mock-data/resp_user_sock_shop_18.json'
