{
 "20": "    @clear_session({'spanId': 20})\n    def test_20_get_(self):\n        # GET http://edge-router/ (endp 20)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        resp = edge_router.get('/')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "21": "    @clear_session({'spanId': 21})\n    def test_21_get_basket_html(self):\n        # GET http://edge-router/basket.html (endp 21)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        resp = edge_router.get('/basket.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#basket div.box form h1', expected_value='Shopping cart')\n\n",
 "33": "    @clear_session({'spanId': 33})\n    def test_33_delete_cart(self):\n        # DELETE http://edge-router/cart (endp 33)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        resp = edge_router.delete('/cart')\n        resp.assert_status_code(202)\n\n",
 "34": "    @json_dataset('data/dataset_34.json')\n    @clear_session({'spanId': 34})\n    def test_34_post_cart(self, data_row):\n        size, = data_row\n\n        # GET http://edge-router/catalogue (endp 22)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        qstr = '?' + urlencode([('size', size)])\n        resp = edge_router.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$.[*].id', resp)\n\n        # POST http://edge-router/cart (endp 34)\n        with open('data/payload_for_endp_34.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', id_)\n        resp = edge_router.post('/cart', json=json_payload)\n        resp.assert_status_code(201)\n\n",
 "46": "    @clear_session({'spanId': 46})\n    def test_46_get_cart(self):\n        # GET http://edge-router/cart (endp 46)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        resp = edge_router.get('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "23": "    @clear_session({'spanId': 23})\n    def test_23_get_category_html(self):\n        # GET http://edge-router/category.html (endp 23)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        resp = edge_router.get('/category.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.panel.panel-default.sidebar-menu div.panel-heading h3.panel-title', expected_value='Filters ')\n\n",
 "24": "    @json_dataset('data/dataset_24.json')\n    @clear_session({'spanId': 24})\n    def test_24_get_detail_html(self, data_row):\n        size, = data_row\n\n        # GET http://edge-router/catalogue (endp 22)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        qstr = '?' + urlencode([('size', size)])\n        resp = edge_router.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$.[*].id', resp)\n\n        # GET http://edge-router/detail.html (endp 24)\n        qstr = '?' + urlencode([('id', id_)])\n        resp = edge_router.get('/detail.html' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.row.same-height-row div div.box.same-height h3', expected_value='You may also like these products')\n\n",
 "25": "    @clear_session({'spanId': 25})\n    def test_25_get_login(self):\n        # GET http://edge-router/login (endp 25)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        resp = edge_router.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('p', expected_value='Cookie is set')\n\n",
 "48": "    @clear_session({'spanId': 48})\n    def test_48_get_navbar_html(self):\n        # GET http://edge-router/navbar.html (endp 48)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        resp = edge_router.get('/navbar.html', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "49": "    @clear_session({'spanId': 49})\n    def test_49_get_topbar_html(self):\n        # GET http://edge-router/topbar.html (endp 49)\n        edge_router = get_http_target('TARGET_EDGE_ROUTER', authenticate)\n        resp = edge_router.get('/topbar.html', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#top div.container div.offer a.btn.btn-success.btn-sm', expected_value='Offer of the day')\n\n",
 "11": "    @clear_session({'spanId': 11})\n    def test_11_get_(self):\n        # GET http://front-end/ (endp 11)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "12": "    @clear_session({'spanId': 12})\n    def test_12_get_basket_html(self):\n        # GET http://front-end/basket.html (endp 12)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/basket.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#basket div.box form h1', expected_value='Shopping cart')\n\n",
 "17": "    @clear_session({'spanId': 17})\n    def test_17_delete_cart(self):\n        # DELETE http://front-end/cart (endp 17)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.delete('/cart')\n        resp.assert_status_code(202)\n\n",
 "18": "    @json_dataset('data/dataset_18.json')\n    @clear_session({'spanId': 18})\n    def test_18_post_cart(self, data_row):\n        size, = data_row\n\n        # GET http://front-end/catalogue (endp 13)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        qstr = '?' + urlencode([('size', size)])\n        resp = front_end.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$.[*].id', resp)\n\n        # POST http://front-end/cart (endp 18)\n        with open('data/payload_for_endp_18.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', id_)\n        resp = front_end.post('/cart', json=json_payload)\n        resp.assert_status_code(201)\n\n",
 "41": "    @clear_session({'spanId': 41})\n    def test_41_get_cart(self):\n        # GET http://front-end/cart (endp 41)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "14": "    @clear_session({'spanId': 14})\n    def test_14_get_category_html(self):\n        # GET http://front-end/category.html (endp 14)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/category.html')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.panel.panel-default.sidebar-menu div.panel-heading h3.panel-title', expected_value='Filters ')\n\n",
 "15": "    @json_dataset('data/dataset_15.json')\n    @clear_session({'spanId': 15})\n    def test_15_get_detail_html(self, data_row):\n        size, = data_row\n\n        # GET http://front-end/catalogue (endp 13)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        qstr = '?' + urlencode([('size', size)])\n        resp = front_end.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        id_ = jsonpath('$.[*].id', resp)\n\n        # GET http://front-end/detail.html (endp 15)\n        qstr = '?' + urlencode([('id', id_)])\n        resp = front_end.get('/detail.html' + qstr)\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#content div.container div div.row.same-height-row div div.box.same-height h3', expected_value='You may also like these products')\n\n",
 "16": "    @clear_session({'spanId': 16})\n    def test_16_get_login(self):\n        # GET http://front-end/login (endp 16)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_cssselect('p', expected_value='Cookie is set')\n\n",
 "43": "    @clear_session({'spanId': 43})\n    def test_43_get_navbar_html(self):\n        # GET http://front-end/navbar.html (endp 43)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/navbar.html', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n\n",
 "44": "    @clear_session({'spanId': 44})\n    def test_44_get_topbar_html(self):\n        # GET http://front-end/topbar.html (endp 44)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/topbar.html', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_status_code(200)\n        resp.assert_cssselect('div#top div.container div.offer a.btn.btn-success.btn-sm', expected_value='Offer of the day')\n\n",
 "7": "    @clear_session({'spanId': 7})\n    def test_07_delete_carts_customerId(self):\n        # GET http://user/login (endp 6)\n        user = get_http_target('TARGET_USER', authenticate)\n        resp = user.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # DELETE http://carts/carts/{customerId} (endp 7)\n        carts = get_http_target('TARGET_CARTS', authenticate)\n        resp = carts.delete(f'/carts/{customerId}')\n        resp.assert_status_code(202)\n\n",
 "8": "    @json_dataset('data/dataset_8.json')\n    @clear_session({'spanId': 8})\n    def test_08_post_carts_customerId_items(self, data_row):\n        size, = data_row\n\n        # GET http://catalogue/catalogue (endp 1)\n        catalogue = get_http_target('TARGET_CATALOGUE', authenticate)\n        qstr = '?' + urlencode([('size', size)])\n        resp = catalogue.get('/catalogue' + qstr)\n        resp.assert_status_code(200)\n        itemId = jsonpath('$.[*].id', resp)\n        unitPrice = jsonpath('$.[*].price', resp)\n\n        # GET http://user/login (endp 6)\n        user = get_http_target('TARGET_USER', authenticate)\n        resp = user.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # POST http://carts/carts/{customerId}/items (endp 8)\n        carts = get_http_target('TARGET_CARTS', authenticate)\n        with open('data/payload_for_endp_8.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.itemId', itemId)\n        apply_into_json(json_payload, '$.unitPrice', unitPrice)\n        resp = carts.post(f'/carts/{customerId}/items', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n\n",
 "26": "    @clear_session({'spanId': 26})\n    def test_26_get_carts_customerId_items(self):\n        # GET http://user/login (endp 6)\n        user = get_http_target('TARGET_USER', authenticate)\n        resp = user.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://carts/carts/{customerId}/items (endp 26)\n        carts = get_http_target('TARGET_CARTS', authenticate)\n        resp = carts.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n",
 "9": "    @json_dataset('data/dataset_9.json')\n    @clear_session({'spanId': 9})\n    def test_09_get_carts_customerId_merge(self, data_row):\n        sessionId, = data_row\n\n        # GET http://user/login (endp 6)\n        user = get_http_target('TARGET_USER', authenticate)\n        resp = user.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://carts/carts/{customerId}/merge (endp 9)\n        carts = get_http_target('TARGET_CARTS', authenticate)\n        qstr = '?' + urlencode([('sessionId', sessionId)])\n        resp = carts.get(f'/carts/{customerId}/merge' + qstr)\n        resp.assert_status_code(202)\n\n",
 "2": "    @json_dataset('data/dataset_2.json')\n    @clear_session({'spanId': 2})\n    def test_02_get_catalogue_id(self, data_row):\n        size, = data_row\n\n        # GET http://catalogue/catalogue (endp 1)\n        catalogue = get_http_target('TARGET_CATALOGUE', authenticate)\n        qstr = '?' + urlencode([('size', size)])\n        resp = catalogue.get('/catalogue' + qstr)\n        resp.assert_status_code(200)\n        id_ = jsonpath('$.[*].id', resp)\n\n        # GET http://catalogue/catalogue/{id} (endp 2)\n        resp = catalogue.get(f'/catalogue/{id_}')\n        resp.assert_status_code(200)\n\n",
 "3": "    @clear_session({'spanId': 3})\n    def test_03_get_customers_customerId(self):\n        # GET http://user/login (endp 6)\n        user = get_http_target('TARGET_USER', authenticate)\n        resp = user.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://user/customers/{customerId} (endp 3)\n        resp = user.get(f'/customers/{customerId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.lastName', expected_value='Name')\n\n",
 "4": "    @clear_session({'spanId': 4})\n    def test_04_get_customers_customerId_addresses(self):\n        # GET http://user/login (endp 6)\n        user = get_http_target('TARGET_USER', authenticate)\n        resp = user.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://user/customers/{customerId}/addresses (endp 4)\n        resp = user.get(f'/customers/{customerId}/addresses')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$._embedded.address.[*].city', expected_value='Glasgow')\n\n",
 "5": "    @clear_session({'spanId': 5})\n    def test_05_get_customers_customerId_cards(self):\n        # GET http://user/login (endp 6)\n        user = get_http_target('TARGET_USER', authenticate)\n        resp = user.get('/login')\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n        customerId = jsonpath('$.user.id', resp)\n\n        # GET http://user/customers/{customerId}/cards (endp 5)\n        resp = user.get(f'/customers/{customerId}/cards')\n        resp.assert_status_code(200)\n\n",
 "29": "    @json_dataset('data/dataset_29.json')\n    @clear_session({'spanId': 29})\n    def test_29_post_paymentAuth(self, data_row):\n        addresseId, amount, cardId, ccv = data_row\n\n        # GET http://user/addresses/{addresseId} (endp 27)\n        user = get_http_target('TARGET_USER', authenticate)\n        resp = user.get(f'/addresses/{addresseId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        resp.assert_jsonpath('$.city', expected_value='Glasgow')\n        country = jsonpath('$.country', resp)\n        number = jsonpath('$.number', resp)\n        postcode = jsonpath('$.postcode', resp)\n        street = jsonpath('$.street', resp)\n\n        # GET http://user/cards/{cardId} (endp 28)\n        resp = user.get(f'/cards/{cardId}', headers=dict([('accept', 'application/hal+json')]))\n        resp.assert_status_code(200)\n        expires = jsonpath('$.expires', resp)\n        longNum = jsonpath('$.longNum', resp)\n\n        # POST http://payment/paymentAuth (endp 29)\n        payment = get_http_target('TARGET_PAYMENT', authenticate)\n        with open('data/payload_for_endp_29.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address.country', country)\n        apply_into_json(json_payload, '$.address.number', number)\n        apply_into_json(json_payload, '$.address.postcode', postcode)\n        apply_into_json(json_payload, '$.address.street', street)\n        apply_into_json(json_payload, '$.amount', amount)\n        apply_into_json(json_payload, '$.card.ccv', ccv)\n        apply_into_json(json_payload, '$.card.expires', expires)\n        apply_into_json(json_payload, '$.card.longNum', longNum)\n        resp = payment.post('/paymentAuth', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(200)\n\n",
 "30": "    @json_dataset('data/dataset_30.json')\n    @clear_session({'spanId': 30})\n    def test_30_post_shipping(self, data_row):\n        name, = data_row\n\n        # POST http://shipping/shipping (endp 30)\n        shipping = get_http_target('TARGET_SHIPPING', authenticate)\n        with open('data/payload_for_endp_30.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', str(uuid.uuid4()))\n        apply_into_json(json_payload, '$.name', name)\n        resp = shipping.post('/shipping', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_status_code(201)\n\n"
}