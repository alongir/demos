{
 "1": "    @clear_session({'spanId': 1})\n    def test_01_get_(self):\n        # GET http://front-end/ (endp 1)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#hot div.box div.container div h2', expected_value='Hot this week')\n\n",
 "8": "    @clear_session({'spanId': 8})\n    def test_08_get_basket_html(self):\n        # GET http://front-end/basket.html (endp 8)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/basket.html')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#basket div.box form h1', expected_value='Shopping cart')\n\n",
 "2": "    @clear_session({'spanId': 2})\n    def test_02_delete_cart(self):\n        # DELETE http://front-end/cart (endp 2)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.delete('/cart')\n        resp.assert_ok()\n        # resp.assert_status_code(202)\n\n",
 "3": "    @json_dataset('data/dataset_3.json')\n    @clear_session({'spanId': 3})\n    def test_03_post_cart(self, data_row):\n        id_, = data_row\n\n        # POST http://front-end/cart (endp 3)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        with open('data/payload_for_endp_3.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', id_)\n        resp = front_end.post('/cart', json=json_payload)\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n\n",
 "21": "    @clear_session({'spanId': 21})\n    def test_21_get_cart(self):\n        # GET http://front-end/cart (endp 21)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/cart', headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "4": "    @json_dataset('data/dataset_4.json')\n    @clear_session({'spanId': 4})\n    def test_04_get_catalogue(self, data_row):\n        size, = data_row\n\n        # GET http://front-end/catalogue (endp 4)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        qstr = '?' + urlencode([('size', size)])\n        resp = front_end.get('/catalogue' + qstr, headers=dict([('x-requested-with', 'XMLHttpRequest')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "5": "    @clear_session({'spanId': 5})\n    def test_05_get_category_html(self):\n        # GET http://front-end/category.html (endp 5)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.get('/category.html')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#content div.container div div.panel.panel-default.sidebar-menu div.panel-heading h3.panel-title', expected_value='Filters ')\n\n",
 "6": "    @clear_session({'spanId': 6})\n    def test_06_get_detail_html(self):\n        # GET http://front-end/detail.html (endp 6)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        qstr = '?' + urlencode([('id', str(uuid.uuid4()))])\n        resp = front_end.get('/detail.html' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('div#content div.container div div.row.same-height-row div div.box.same-height h3', expected_value='You may also like these products')\n\n",
 "7": "    # authentication-related test\n    @clear_session({'spanId': 7})\n    def test_07_get_login(self):\n        # GET http://front-end/login (endp 7)\n        front_end = get_http_target('TARGET_FRONT_END', dummy_auth)\n        resp = front_end.get('/login')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_cssselect('p', expected_value='Cookie is set')\n\n",
 "9": "    @clear_session({'spanId': 9})\n    def test_09_post_orders(self):\n        # POST http://front-end/orders (endp 9)\n        front_end = get_http_target('TARGET_FRONT_END', authenticate)\n        resp = front_end.post('/orders')\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n        # resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n\n",
 "14": "    @json_dataset('data/dataset_14.json')\n    @clear_session({'spanId': 14})\n    def test_14_delete_carts_customerId(self, data_row):\n        customerId, = data_row\n\n        # DELETE http://carts/carts/{customerId} (endp 14)\n        carts = get_http_target('TARGET_CARTS', authenticate)\n        resp = carts.delete(f'/carts/{customerId}')\n        resp.assert_ok()\n        # resp.assert_status_code(202)\n\n",
 "15": "    @json_dataset('data/dataset_15.json')\n    @clear_session({'spanId': 15})\n    def test_15_post_carts_customerId_items(self, data_row):\n        customerId, itemId, unitPrice = data_row\n\n        # POST http://carts/carts/{customerId}/items (endp 15)\n        carts = get_http_target('TARGET_CARTS', authenticate)\n        with open('data/payload_for_endp_15.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.itemId', itemId)\n        apply_into_json(json_payload, '$.unitPrice', unitPrice)\n        resp = carts.post(f'/carts/{customerId}/items', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n\n",
 "18": "    @json_dataset('data/dataset_18.json')\n    @clear_session({'spanId': 18})\n    def test_18_get_carts_customerId_items(self, data_row):\n        customerId, = data_row\n\n        # GET http://carts/carts/{customerId}/items (endp 18)\n        carts = get_http_target('TARGET_CARTS', authenticate)\n        resp = carts.get(f'/carts/{customerId}/items', headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "16": "    @json_dataset('data/dataset_16.json')\n    @clear_session({'spanId': 16})\n    def test_16_get_carts_customerId_merge(self, data_row):\n        customerId, sessionId = data_row\n\n        # GET http://carts/carts/{customerId}/merge (endp 16)\n        carts = get_http_target('TARGET_CARTS', authenticate)\n        qstr = '?' + urlencode([('sessionId', sessionId)])\n        resp = carts.get(f'/carts/{customerId}/merge' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(202)\n\n",
 "10": "    @json_dataset('data/dataset_10.json')\n    @clear_session({'spanId': 10})\n    def test_10_get_catalogue(self, data_row):\n        size, = data_row\n\n        # GET http://catalogue/catalogue (endp 10)\n        catalogue = get_http_target('TARGET_CATALOGUE', authenticate)\n        qstr = '?' + urlencode([('size', size)])\n        resp = catalogue.get('/catalogue' + qstr)\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "11": "    @json_dataset('data/dataset_11.json')\n    @clear_session({'spanId': 11})\n    def test_11_get_catalogue_id(self, data_row):\n        id_, = data_row\n\n        # GET http://catalogue/catalogue/{id} (endp 11)\n        catalogue = get_http_target('TARGET_CATALOGUE', authenticate)\n        resp = catalogue.get(f'/catalogue/{id_}')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "12": "    @json_dataset('data/dataset_12.json')\n    @clear_session({'spanId': 12})\n    def test_12_get_customers_id(self, data_row):\n        id_, = data_row\n\n        # GET http://user/customers/{id} (endp 12)\n        user = get_http_target('TARGET_USER', authenticate)\n        resp = user.get(f'/customers/{id_}')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.lastName', expected_value='Name')\n\n",
 "13": "    # authentication-related test\n    @clear_session({'spanId': 13})\n    def test_13_get_login(self):\n        # GET http://user/login (endp 13)\n        user = get_http_target('TARGET_USER', dummy_auth)\n        resp = user.get('/login')\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n        # resp.assert_jsonpath('$.user.lastName', expected_value='Name')\n\n",
 "17": "    @json_dataset('data/dataset_17.json')\n    @clear_session({'spanId': 17})\n    def test_17_post_orders(self, data_row):\n        address, card, customer, items = data_row\n\n        # POST http://orders/orders (endp 17)\n        orders = get_http_target('TARGET_ORDERS', authenticate)\n        with open('data/payload_for_endp_17.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address', address)\n        apply_into_json(json_payload, '$.card', card)\n        apply_into_json(json_payload, '$.customer', customer)\n        apply_into_json(json_payload, '$.items', items)\n        resp = orders.post('/orders', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n        # resp.assert_jsonpath('$.address.city', expected_value='Glasgow')\n\n",
 "19": "    @json_dataset('data/dataset_19.json')\n    @clear_session({'spanId': 19})\n    def test_19_post_paymentAuth(self, data_row):\n        ccv, country, expires, id_, id1, id2, longNum, number, postcode, street = data_row\n\n        # POST http://payment/paymentAuth (endp 19)\n        payment = get_http_target('TARGET_PAYMENT', authenticate)\n        with open('data/payload_for_endp_19.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.address.country', country)\n        apply_into_json(json_payload, '$.address.id', id_)\n        apply_into_json(json_payload, '$.address.number', number)\n        apply_into_json(json_payload, '$.address.postcode', postcode)\n        apply_into_json(json_payload, '$.address.street', street)\n        apply_into_json(json_payload, '$.amount', float(random.uniform(4.99, 47.989998)))\n        apply_into_json(json_payload, '$.card.ccv', ccv)\n        apply_into_json(json_payload, '$.card.expires', expires)\n        apply_into_json(json_payload, '$.card.id', id1)\n        apply_into_json(json_payload, '$.card.longNum', longNum)\n        apply_into_json(json_payload, '$.customer.id', id2)\n        resp = payment.post('/paymentAuth', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(200)\n\n",
 "20": "    @json_dataset('data/dataset_20.json')\n    @clear_session({'spanId': 20})\n    def test_20_post_shipping(self, data_row):\n        name, = data_row\n\n        # POST http://shipping/shipping (endp 20)\n        shipping = get_http_target('TARGET_SHIPPING', authenticate)\n        with open('data/payload_for_endp_20.json', 'r') as json_payload_file:\n            json_payload = json.load(json_payload_file)\n        apply_into_json(json_payload, '$.id', str(uuid.uuid4()))\n        apply_into_json(json_payload, '$.name', name)\n        resp = shipping.post('/shipping', json=json_payload, headers=dict([('accept', 'application/json')]))\n        resp.assert_ok()\n        # resp.assert_status_code(201)\n\n"
}